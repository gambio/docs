@startuml
'https://plantuml.com/class-diagram

!theme gambio from ../gambio-puml-theme

interface IteratorAggregate

package Gambio\Core\Event\EventRaisingEntity {
	abstract class AbstractEventRaisingEntity {}
}


package Gambio\Admin\Modules\Customer\Submodules\\Submodules\Memos\Model\Collections {
    class BasicAuths {
        + {static} create(BasicAuth ...$basicAuths): BasicAuths
		..
		+ toArray(): array
    }

    class JsonWebTokens {
        + {static} create(JsonWebToken ...$jsonWebTokens): JsonWebTokens
		..
		+ toArray(): array
    }
}

package Gambio\Admin\Modules\Customer\Submodules\Credential\Model {
	class BasicAuth <<Aggregate Root>> {
		- id: BasicAuthId
		- customerId: CustomerId
		- login: BasicAuthLogin
		- passwordHash: string
		--
		+ {static} create(\
		\n    BasicAuthId $id, CustomerId $customerId,\
		\n    BasicAuthLogin $login, string $passwordHash\
		\n): BasicAuth
		..
		+ changeLogin(BasicAuthLogin $login): void
		+ changePassword(BasicAuthPassword $password): void
		..
		+ id(): int
		+ customerId(): int
		+ login(): string
		+ passwordHash(): string
	}

	class JsonWebToken <<Aggregate Root>> {
		- id(): int
		- customerId(): int
		- secret: string
		- headers: array
		- payload: array
		- includeSecretInSignaturePayload: bool
		- useRawHmacForSignature: bool
		--
		+ {static} createToken(\
		\n    JsonWebTokenId $id, CustomerId $customerId,\
		\n    string $secret, array $headers, array $payload\
		\n): CustomerApiTokenCredential
		+ {static} createCompatibilityToken(\
		\n    JsonWebTokenId $id, CustomerId $customerId,\
		\n    string $secret, array $headers, array $payload\
		\n): CustomerApiTokenCredential
		..
		+ id(): int
		+ customerId(): int
		+ headers(): array
		+ payload(): array
		+ signature(): string
		+ creationTimestamp(): int
		+ expireTimestamp(): int
		+ toString(): string
	}
	note top of JsonWebToken: We won't implement this yet.
}

package Gambio\Admin\Modules\Customer\Submodules\Credential\Model\ValueObjects {
	class BasicAuthId {
		- value: int
		--
		+ {static} create(int $value): BasicAuthId
		..
		+ value(): int
	}

	class CustomerId {
		- value: int
		--
		+ {static} create(int $value): CustomerId
		..
		+ value(): int
	}

	class BasicAuthLogin {
		- value: string
		--
		+ {static} create(string $value): BasicAuthLogin
		..
		+ value(): string
	}

	class BasicAuthPassword {
		- value: string
		--
		+ {static} create(string $value): BasicAuthPassword
		..
		+ value(): string
	}
}


BasicAuths o- BasicAuth
BasicAuths --|> IteratorAggregate

JsonWebTokens o- JsonWebToken
JsonWebTokens --|> IteratorAggregate

BasicAuth --|> AbstractEventRaisingEntity
BasicAuth o- BasicAuthId
BasicAuth o- CustomerId
BasicAuth o- BasicAuthLogin

@enduml