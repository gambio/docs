{
  "openapi": "3.0.0",
  "info": {
    "title": "API v3",
    "version": "",
    "description": "This documentation reference will provide you analytic guides on how the API works, which resources are available and the proper way to request them efficiently.\n\nWe follow a strict deprecation period for breaking changes to our endpoints, so that appropriate time is given to users to update their implementations accordingly.\n\nThank you for using the Gambio REST API!",
    "contact": {
      "name": "Gambio GmbH",
      "url": "https://www.gambio.de"
    }
  },
  "servers": [
    {
      "url": "https://www.gambio-shop.de/shop1"
    }
  ],
  "paths": {
    "/api.php/v3/withdrawals": {
      "get": {
        "summary": "Get all available withdrawals",
        "operationId": "get-withdrawals",
        "tags": [
          "Withdrawals"
        ],
        "description": "Returns a collection of withdrawals.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-withdrawals"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of withdrawals.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/withdrawals-withdrawals"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/withdrawals-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new withdrawal",
        "operationId": "create-withdrawals",
        "tags": [
          "Withdrawals"
        ],
        "description": "Creates a single or multiple new withdrawals based on the request body.",
        "requestBody": {
          "description": "Withdrawals data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/withdrawals-withdrawalsData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Withdrawal successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/withdrawals-withdrawalIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/withdrawals-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update sort order of an existing withdrawal",
        "operationId": "patch-withdrawals",
        "tags": [
          "Withdrawals"
        ],
        "description": "Updates the sort order(s) of a single or multiple withdrawals based on the request body.",
        "requestBody": {
          "description": "Withdrawals data to update sort orders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/withdrawals-withdrawalPatches"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Withdrawals sort order successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/withdrawals/{id}": {
      "get": {
        "summary": "Get a specific withdrawal",
        "operationId": "get-withdrawal",
        "tags": [
          "Withdrawals"
        ],
        "description": "Returns a single withdrawal based in the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing withdrawal.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Withdrawal data.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/withdrawals-withdrawal"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/withdrawals-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/withdrawals/{ids}": {
      "delete": {
        "summary": "Delete multiple withdrawals",
        "operationId": "delete-withdrawals",
        "tags": [
          "Withdrawals"
        ],
        "description": "Deletes one or more withdrawals based on the provided IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "Withdrawal IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Withdrawals successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/parcel-services": {
      "get": {
        "summary": "Get all available parcel services",
        "operationId": "get-parcelServices",
        "tags": [
          "Parcel Services"
        ],
        "description": "Returns a collection of parcel services.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-parcel-services"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of parcel services.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/parcelServices-parcelServices"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/parcelServices-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new parcel service",
        "operationId": "create-parcelServices",
        "tags": [
          "Parcel Services"
        ],
        "description": "Creates a single or multiple new parcel services based on the request body.",
        "requestBody": {
          "description": "Parcel services data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parcelServices-parcelServicesData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Withdrawal successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/parcelServices-parcelServiceIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/parcelServices-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing parcel service",
        "operationId": "update-parcelServices",
        "tags": [
          "Parcel Services"
        ],
        "description": "Updates a single or multiple parcel services based on the request body.",
        "requestBody": {
          "description": "Parcel services data for update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parcelServices-parcelServicesData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Parcel services successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/parcel-services/{id}": {
      "get": {
        "summary": "Get a specific parcel service",
        "operationId": "get-parcelService",
        "tags": [
          "Parcel Services"
        ],
        "description": "Returns a single parcel service based in the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing parcel service.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parcel service data.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/parcelServices-parcelService"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/parcelServices-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/parcel-services/{ids}": {
      "delete": {
        "summary": "Delete multiple parcel services",
        "operationId": "delete-parcelServices",
        "tags": [
          "Parcel Services"
        ],
        "description": "Deletes one or more parcel services based on the provided IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "Parcel service IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Parcel services successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/tracking-codes": {
      "get": {
        "summary": "Get all available tracking codes",
        "operationId": "get-tracking codes",
        "tags": [
          "Tracking Codes"
        ],
        "description": "Returns a collection of tracking codes.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-tracking-codes"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of tracking codes.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/trackingCodes-trackingCodes"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/trackingCodes-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new tracking code",
        "operationId": "create-tracking codes",
        "tags": [
          "Tracking Codes"
        ],
        "description": "Creates a single or multiple new tracking codes based on the request body. Parcel service information like name, comment, and so on must be determined manually but default values are defined for each parcel service and could, for example, be fetched via the dedicated REST API endpoint.",
        "requestBody": {
          "description": "Tracking Codes data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackingCodes-trackingCodesData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tracking Code successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/trackingCodes-trackingCodeIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/trackingCodes-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/tracking-codes/{id}": {
      "get": {
        "summary": "Get a specific tracking code",
        "operationId": "get-tracking code",
        "tags": [
          "Tracking Codes"
        ],
        "description": "Returns a single tracking code based in the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an existing tracking code.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tracking Code data.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/trackingCodes-trackingCode"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/trackingCodes-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/tracking-codes/{ids}": {
      "delete": {
        "summary": "Delete multiple tracking codes",
        "operationId": "delete-tracking codes",
        "tags": [
          "Tracking Codes"
        ],
        "description": "Deletes one or more tracking codes based on the provided IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "description": "Tracking Code IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tracking Codes successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/shop-config": {
      "get": {
        "summary": "Get current shop configuration",
        "operationId": "get-shop config",
        "tags": [
          "Shop Config"
        ],
        "description": "Returns the current shop configuration.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a collection of configuration values.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/shopConfig-shopConfig"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api.php/v3/shop-config/{key}": {
      "get": {
        "summary": "Get a specific value of the current shop configuration",
        "operationId": "get-shop config key",
        "tags": [
          "Shop Config"
        ],
        "description": "Returns a single value of the current shop configuration.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "key of a config element",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "DEFAULT_CURRENCY"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of configuration values.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/shopConfig-shopConfigElementValue"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/options": {
      "get": {
        "summary": "Get all available options",
        "operationId": "get-options",
        "tags": [
          "Options"
        ],
        "description": "Returns a collection of options.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-options"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of options.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/options-options"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/options-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new option",
        "operationId": "create-option",
        "tags": [
          "Options"
        ],
        "description": "Creates a single or multiple new option based on the request body.\\n\\n**NOTE**: all the languages, in the \\\"details\\\" array, are required.",
        "requestBody": {
          "description": "Option data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-options-creation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Option successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/options-optionIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/options-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update the sort order of an existing option",
        "operationId": "patch-options",
        "tags": [
          "Options"
        ],
        "description": "Updates the sort order of a single or multiple options based on the request body.",
        "requestBody": {
          "description": "Options data for updating sort orders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-optionPatches"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Options sort orders successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing option",
        "operationId": "update-option",
        "tags": [
          "Options"
        ],
        "description": "Updates a single or multiple options based on the request body.\n\n**NOTE**: all the languages, in the \"details\" array, are required.",
        "requestBody": {
          "description": "Options data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-options-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Option successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/options/{optionId}": {
      "get": {
        "summary": "Get a specific option",
        "operationId": "get-options-by-id",
        "tags": [
          "Options"
        ],
        "description": "Returns a single option based in the provided ID.",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific option.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/options-option"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/options-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/options/{optionIds}": {
      "delete": {
        "summary": "Delete multiple options",
        "operationId": "delete-options",
        "tags": [
          "Options"
        ],
        "description": "Deletes one or more options based on the provided IDs.",
        "parameters": [
          {
            "name": "optionIds",
            "in": "path",
            "description": "Option IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Options successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/options/{optionId}/values": {
      "get": {
        "summary": "Get all available option values for a given option",
        "operationId": "get-options-values",
        "tags": [
          "Options"
        ],
        "description": "Returns a collection of option values for a given option.",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of option values.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/options-option-values"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/options-collectionMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      },
      "post": {
        "summary": "Create a new option value",
        "operationId": "create-option-values",
        "tags": [
          "Options"
        ],
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "description": "Creates a single or multiple new option values based on the request body.",
        "requestBody": {
          "description": "Option values data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-option-values-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Option values successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/options-optionValueIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/options-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing option value",
        "operationId": "update-option-values",
        "tags": [
          "Options"
        ],
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "description": "Updates a single or multiple option values based on the request body.",
        "requestBody": {
          "description": "Option values data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-option-values-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Option values successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update sort order of an existing option value",
        "operationId": "patch-options-values",
        "tags": [
          "Options"
        ],
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "description": "Updates the sort order(s) of a single or multiple option values based on the request body.",
        "requestBody": {
          "description": "Option values data to update sort orders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/options-optionPatches"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Option values sort order successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/options/{optionId}/values/{optionValueIds}": {
      "delete": {
        "summary": "Delete multiple option values",
        "operationId": "delete-option-values",
        "tags": [
          "Options"
        ],
        "description": "Deletes one or more option values based on the provided IDs.",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "optionValueIds",
            "in": "path",
            "description": "Option value IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Option values successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/options/{optionId}/values/{optionValueId}/image/{relativePath}": {
      "post": {
        "summary": "Upload and add an image to an existing option value",
        "operationId": "upload-option-value-image",
        "tags": [
          "Options"
        ],
        "description": "Adds a new image to an existing option value.",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of an existing option.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "optionValueId",
            "in": "path",
            "description": "ID of an existing option value.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "relativePath",
            "in": "path",
            "description": "Relative path of the option value image.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "subdirectory/image.jpg"
            }
          }
        ],
        "requestBody": {
          "description": "option value image for addition.",
          "required": true,
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/gif": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/jpg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "option value image successfully added.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants": {
      "get": {
        "summary": "Get all available product variants",
        "operationId": "get-product-variants",
        "tags": [
          "Product Variants"
        ],
        "description": "Returns a collection of product variants.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-product-variants"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of product variants.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productVariants-variants"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product variant",
        "operationId": "create-product-variant",
        "tags": [
          "Product Variants"
        ],
        "description": "Creates a single or multiple new product variants based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product variants data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-variants-creation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product variants successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productVariants-variants-created"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing product variant",
        "operationId": "update-product-variant",
        "tags": [
          "Product Variants"
        ],
        "description": "Updates a single or multiple product variants based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product variants data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-variants-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product variants successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Updates a part of an existing product variant",
        "operationId": "patch-product-variants",
        "tags": [
          "Product Variants"
        ],
        "description": "Updates a part of a single or multiple product variants based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product variants data with patches.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Product variants successfully patched.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "delete": {
        "summary": "Delete all product variants",
        "operationId": "delete-all-product-variants",
        "tags": [
          "Product Variants"
        ],
        "description": "Deletes all product variants.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All product variants successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants/{variantId}": {
      "get": {
        "summary": "Get a specific product variant",
        "operationId": "get-product-variant-by-id",
        "tags": [
          "Product Variants"
        ],
        "description": "Returns a single product variant based in the provided ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "variantId",
            "in": "path",
            "description": "ID of a product variant.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "int",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific product variant.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productVariants-variant"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants/{variantIds}": {
      "delete": {
        "summary": "Delete multiple product variants",
        "operationId": "delete-product-variants",
        "tags": [
          "Product Variants"
        ],
        "description": "Deletes one or more product variants based on the provided IDs.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Product variant IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "int",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product variants successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants/_generate": {
      "post": {
        "summary": "Generate new product variants",
        "operationId": "generate-product-variant",
        "tags": [
          "Product Variants"
        ],
        "description": "Generates a single or multiple product variants based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional query parameter to limit how many product variants can be generated per request.",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "example": 100,
              "default": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Optional query parameter offset is used to specify which product variants should be processed.",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "example": 0,
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Option IDs and option value IDs for generation of product variant combinations.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-generation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product variants successfully generated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productVariants-variants-created"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-creationMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants/_add-options": {
      "post": {
        "summary": "Add new options to the existing product variant combinations",
        "operationId": "add-options",
        "tags": [
          "Product Variants"
        ],
        "description": "Adds a single or multiple options (with option values) to the existing product variant combinations based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Option IDs and option value IDs for adding them to the existing product variant combinations.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-optionValues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Options successfully added to the product variants combinations.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productVariants-variants-created"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/variants/_remove-options": {
      "post": {
        "summary": "Remove options from the existing product variant combinations",
        "operationId": "remove-options",
        "tags": [
          "Product Variants"
        ],
        "description": "Removes a single or multiple options from the existing product variants based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Option IDs that should be removed, as well as their option value IDs that are used to determine which combinations should be kept.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productVariants-option-ids-option-value-ids"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Options successfully removed from product variants.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/options": {
      "get": {
        "summary": "Get all available product options",
        "operationId": "get-product-options",
        "tags": [
          "Product Options"
        ],
        "description": "Returns a collection of product options.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-product-options"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of product variants.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productOptions-productOptions"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productOptions-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product option",
        "operationId": "create-product-option",
        "tags": [
          "Product Options"
        ],
        "description": "Creates a single or multiple new product options based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product options data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productOptions-productOptionsCreation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product options successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productOptions-OptionsCreated"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productVariants-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing product option",
        "operationId": "update-product-option",
        "tags": [
          "Product Options"
        ],
        "description": "Updates a single or multiple product options based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product options data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productOptions-productOptions"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Option options successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update a part of an existing product option",
        "operationId": "patch-product-options",
        "tags": [
          "Product Options"
        ],
        "description": "Updates a part of a single or multiple product options based on the request body.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Product options data with patches.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productOptions-Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Product options successfully patched.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "delete": {
        "summary": "Delete all product options",
        "operationId": "delete-all-product-options",
        "tags": [
          "Product Options"
        ],
        "description": "Deletes all product options.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All product options successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/options/{optionId}": {
      "get": {
        "summary": "Get a specific product option",
        "operationId": "get-product-option-by-id",
        "tags": [
          "Product Options"
        ],
        "description": "Returns a single product option based in the provided ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "description": "ID of a product variant.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific product option.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/productOptions-productOption"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/productOptions-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/products/{productId}/options/{optionIds}": {
      "delete": {
        "summary": "Delete multiple product options",
        "operationId": "delete-product-options",
        "tags": [
          "Product Options"
        ],
        "description": "Deletes one or more product options based on the provided IDs.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of a product.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "ids",
            "in": "path",
            "description": "Product variant IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3,4,5"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product options successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/image-lists": {
      "get": {
        "summary": "Get all available image lists",
        "operationId": "get-image-lists",
        "tags": [
          "ImageLists"
        ],
        "description": "Returns a collection of image lists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-image-list"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of image lists.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/imageLists-imageLists"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/imageLists-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new image list",
        "operationId": "create-image-list",
        "tags": [
          "ImageLists"
        ],
        "description": "Creates a single or multiple new image lists based on the request body.",
        "requestBody": {
          "description": "Image lists data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/imagelists-imagelists-creation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Image lists successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/imagelists-imagelistIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/imageLists-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing image list",
        "operationId": "update-image-list",
        "tags": [
          "ImageLists"
        ],
        "description": "Updates a single or multiple image lists based on the request body.",
        "requestBody": {
          "description": "Image list data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image-list-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Image lists successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/image-lists/{imageListId}": {
      "get": {
        "summary": "Get a specific image list",
        "operationId": "get-image-list-by-id",
        "tags": [
          "ImageLists"
        ],
        "description": "Returns a single image list based in the provided ID.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific image list.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/imageLists-imageList"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/imageLists-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/image-lists/{imageListIds}": {
      "delete": {
        "summary": "Delete multiple image lists",
        "operationId": "delete-image-lists",
        "tags": [
          "ImageLists"
        ],
        "description": "Deletes one or more image lists based on the provided IDs.",
        "parameters": [
          {
            "name": "imageListIds",
            "in": "path",
            "description": "Image list IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Image lists successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/image-lists/{imageListId}/images": {
      "get": {
        "summary": "Get all available image list images",
        "operationId": "get-image-lists-images",
        "tags": [
          "ImageLists"
        ],
        "description": "Returns a collection of image lists.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-image-list-images"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of image lists.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/imageLists-imageListImages"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/imageLists-documentMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an already uploaded image to an existing image list",
        "operationId": "add-existing-image-image-list",
        "tags": [
          "ImageLists"
        ],
        "description": "Adds a single or multiple existing images to an image lists based on the request body.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Image list images data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image-list-update-image"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Image list images successfully added.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update sort order of an existing image list images",
        "operationId": "patch-image-list-image",
        "tags": [
          "ImageLists"
        ],
        "description": "Updates the sort order(s) of a single or multiple image list images based on the request body.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Image list images data to update sort orders.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/imagelists-image-patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Image list images sort orders successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing image list image",
        "operationId": "update-image-list-image",
        "tags": [
          "ImageLists"
        ],
        "description": "Updates a single or multiple image list images based on the request body.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "Image list images data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image-list-update-image"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Image list images successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/image-lists/{imageListId}/images/{relativePath}": {
      "delete": {
        "summary": "Delete single image list image",
        "operationId": "delete-image-list-image",
        "tags": [
          "ImageLists"
        ],
        "description": "Deletes a single image list image based on the provided image path.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "relativePath",
            "in": "path",
            "description": "Relative path of an image list image.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "subdirectory/image.jpg"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Image list image successfully deleted."
          }
        }
      },
      "post": {
        "summary": "Upload and add an image to an existing image list",
        "operationId": "create-image-list-image",
        "tags": [
          "ImageLists"
        ],
        "description": "Adds a new image to an existing image list.",
        "parameters": [
          {
            "name": "imageListId",
            "in": "path",
            "description": "ID of an existing image list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "relativePath",
            "in": "path",
            "description": "Relative path of an image list image.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "subdirectory/image.jpg"
            }
          }
        ],
        "requestBody": {
          "description": "Image list image for addition.",
          "required": true,
          "content": {
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/gif": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Image list image successfully added.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/imagelists-imagelistPaths"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/memos": {
      "get": {
        "summary": "Get all available customer memos",
        "operationId": "get-customer-memos",
        "tags": [
          "Customer Memo"
        ],
        "description": "Returns a collection of customer memos.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-customer-memo"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of customer memos.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerMemos-customerMemos"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerMemos-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all customer memos",
        "operationId": "delete-all-customer-memos",
        "tags": [
          "Customer Memo"
        ],
        "description": "Deletes all memos of a specified customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Customer memos successfully deleted."
          }
        }
      },
      "post": {
        "summary": "Create a new customer memo",
        "operationId": "create-customer-memo",
        "tags": [
          "Customer Memo"
        ],
        "description": "Creates a single or multiple new customer memos based on the request body.",
        "requestBody": {
          "description": "Customer memo data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerMemos-createCustomerMemos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer memos successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerMemos-customerMemoIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerMemos-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing customer memo",
        "operationId": "update-customer-memo",
        "tags": [
          "Customer Memo"
        ],
        "description": "Updates a single or multiple customer memo based on the request body.",
        "requestBody": {
          "description": "Customer memo data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerMemos-updateCustomerMemos"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Customer memos successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/memos/{memoId}": {
      "get": {
        "summary": "Get a specific customer memo",
        "operationId": "get-customer-memo-by-id",
        "tags": [
          "Customer Memo"
        ],
        "description": "Returns a single customer memo based in the provided ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "memoId",
            "in": "path",
            "description": "ID of an existing customer memo.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific customer memo.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerMemos-customerMemo"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerMemos-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/memos/{memoIds}": {
      "delete": {
        "summary": "Delete multiple customer memos",
        "operationId": "delete-customer-memos",
        "tags": [
          "Customer Memo"
        ],
        "description": "Deletes one or more customer memos based on the provided IDs.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "memoIds",
            "in": "path",
            "description": "Customer memo IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Customer memos successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/addon-values": {
      "get": {
        "summary": "Get all available customer addon values",
        "operationId": "get-customer-addon-values",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Returns a collection of customer addon values.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-customer-addon-value"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of customer addon values.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerAddonValues-customerAddonValues"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerAddonValues-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all customer addon values",
        "operationId": "delete-all-customer-addon-values",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Deletes all addon values of a specified customer.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Customer addon values successfully deleted."
          }
        }
      },
      "post": {
        "summary": "Create a new customer addon value",
        "operationId": "create-customer-addon-value",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Creates a single or multiple new customer addon values based on the request body.",
        "requestBody": {
          "description": "Customer addon data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerAddonValues-create-update-customerAddonValues"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer addon values successfully created.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerAddonValues-customerAddonValuesIdentifiers"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerAddonValues-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "put": {
        "summary": "Update an existing customer addon value",
        "operationId": "update-customer-addon-value",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Updates a single or multiple customer addon value based on the request body.",
        "requestBody": {
          "description": "Customer memo data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerAddonValues-create-update-customerAddonValues"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Customer addon values successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/addon-values/{key}": {
      "get": {
        "summary": "Get a specific customer addon value",
        "operationId": "get-customer-addon-value",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Returns a single customer addon value based in the provided ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Key of an existing customer addon value.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "test_key",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific customer addon value.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customerAddonValues-customerAddonValue"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customerAddonValues-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}/addon-values/{keys}": {
      "delete": {
        "summary": "Delete multiple customer addon values",
        "operationId": "delete-customer-addon-values",
        "tags": [
          "Customer Addon Values"
        ],
        "description": "Deletes one or more customer addon values based on the provided keys.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "name": "keys",
            "in": "path",
            "description": "Key of an existing customer addon value as a comma separated list.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "test_key1,test_key2,test_key3",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Customer addon values successfully deleted."
          }
        }
      }
    },
    "/api.php/v3/customers": {
      "get": {
        "summary": "Get all available customers",
        "operationId": "get-customers",
        "tags": [
          "Customer"
        ],
        "description": "Returns a collection of customers.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          },
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-customer"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of customers.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customers-customers"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customers-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing customer",
        "operationId": "update-customer",
        "tags": [
          "Customer"
        ],
        "description": "Updates a single or multiple customers based on the request body.",
        "requestBody": {
          "description": "Customer data for update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customers-updateCustomers"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Customers successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      },
      "patch": {
        "summary": "Update the is-favorite state of an existing customer",
        "operationId": "patch-customers",
        "tags": [
          "Customer"
        ],
        "description": "Updates the is-favorite state of a single or multiple customers based on the request body.",
        "requestBody": {
          "description": "Customers data for updating the is-favorite states.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customers-patchCustomers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Customers is-favorite state successfully updated.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerId}": {
      "get": {
        "summary": "Get a specific customer",
        "operationId": "get-customer-by-id",
        "tags": [
          "Customer"
        ],
        "description": "Returns a single customer based in the provided ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of an existing customer.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific customer.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customers-customer"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customers-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/api.php/v3/customers/{customerIds}": {
      "delete": {
        "summary": "Delete multiple customers",
        "operationId": "delete-customers",
        "tags": [
          "Customer"
        ],
        "description": "Deletes one or more customers based on the provided IDs.",
        "parameters": [
          {
            "name": "customerIds",
            "in": "path",
            "description": "Customer IDs represented as a comma separated list.",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2,3,4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Customers successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/customers/guests": {
      "delete": {
        "summary": "Delete outdated guest accounts",
        "operationId": "delete-guests-customers",
        "tags": [
          "Customer"
        ],
        "description": "Deletes customers' guest accounts that are outdated (with no active session).",
        "responses": {
          "204": {
            "description": "Outdated customers' guest accounts successfully deleted."
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          }
        }
      }
    },
    "/api.php/v3/customers/register": {
      "post": {
        "summary": "Register a new customer",
        "operationId": "register-customer",
        "tags": [
          "Customer"
        ],
        "description": "Registers a single or multiple new customers based on the request body.",
        "requestBody": {
          "description": "Customer data for creation.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customer-registration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customers successfully registered.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customers-customerIds"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/customers-creationMetaData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/missingAttribute"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "409": {
            "$ref": "#/components/responses/conflictByDataOrAction"
          },
          "422": {
            "$ref": "#/components/responses/invalidData"
          }
        }
      }
    },
    "/api.php/v3/currencies": {
      "get": {
        "summary": "Get all available currencies",
        "operationId": "get-currencies",
        "tags": [
          "Currencies"
        ],
        "description": "Returns a collection of currencies.",
        "parameters": [
          {
            "$ref": "#/components/parameters/query-fields"
          },
          {
            "$ref": "#/components/parameters/query-filter-currency"
          },
          {
            "$ref": "#/components/parameters/query-page"
          },
          {
            "$ref": "#/components/parameters/query-perPage"
          },
          {
            "$ref": "#/components/parameters/query-sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of currencies.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/currencies-currencies"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/currencies-collectionMetaData"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api.php/v3/currencies/{currencyId}": {
      "get": {
        "summary": "Get a specific currency",
        "operationId": "get-currency-by-id",
        "tags": [
          "Currencies"
        ],
        "description": "Returns a single currency based in the provided ID.",
        "parameters": [
          {
            "name": "currencyId",
            "in": "path",
            "description": "ID of an existing currency.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "example": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific currency.",
            "headers": {
              "X-Shop-Version": {
                "$ref": "#/components/headers/shopVersion"
              },
              "X-API-Version": {
                "$ref": "#/components/headers/apiVersion"
              },
              "X-Rate-Limit-Limit": {
                "$ref": "#/components/headers/rateLimitLimit"
              },
              "X-Rate-Limit-Remaining": {
                "$ref": "#/components/headers/rateLimitRemaining"
              },
              "X-Rate-Limit-Reset": {
                "$ref": "#/components/headers/rateLimitReset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/currencies-currency"
                    },
                    "_meta": {
                      "$ref": "#/components/schemas/currencies-documentMetaData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "General Information",
      "description": "Since GX v4.1.1.0 there is a new REST API version available. Similar to the existing v2 API, the new endpoints can be\ncalled via `https://www.your-shop-domain.de/path-to-shop/api.php/v3`.\n\n\n## Error Handling\n\nEvery error response will contain a valid HTTP Status Code. The response body itself will provided error information\nbased on the current mode of the application (*develop* or *production*). If there is a `.dev-environment` file\nexists in the base directory of the shop, the *develop* mode is active and the response body will contain not only\na error message itself, but also a stack trace of the error.\n\n\n## HATEOAS Support\n\nHATEOAS stands for Hypermedia as the Engine of Application State and describes the use of links which point to\nexternal resources or actions that are related to a specific resource. The API will provide links inside the\nresponse body, if available.\n\n\n## HTTP Caching Support\n\nWeb caching is not currently supported by any resource but is planned for a future release of the API.\nCaching support will be stated in each section explicitly and the API will return an `ETag` or `Last-Modified`\nalong with an `Expires` headers, containing information about the provided response.\n\n\n## Usage with Postman\n\nPostman is a third party graphical user interface to easily communicate with RESTful APIs. It enables you to directly\nimport the swagger-defined GX4 API v3 specification, which we provide for you (link is at the top of this page).\n\nImporting the specification into Postman automatically provides you with all API-Endpoints available and\nadditionally, most variables are already declared, allowing you to quickly explore the GX4 RESTful API v3.\n\n\n### Defining your API location\n\nOnce you downloaded the `swagger.json`, it is advised to manually re-define your API's location according to your\nhosting. To do so, open the previously downloaded `swagger.json` with a text-editor of your choice, and you will\nsee a JSON document defining all of the API's available communication.\n\nTo quickly customize the specification to your needs, change the following values at the beginning of the document\nby replacing the string `https://www.gambio-shop.de/shop1` according to your setup:\n\n```json\n{\n  //...\n  \"servers\": [\n    {\n      \"url\": \"https://www.gambio-shop.de/shop1\"\n    }\n  ],\n  //...\n}\n```\n\n\n### Importing into Postman\n\nOnce the above stated changes were manually applied, you may proceed to open Postman. Navigate to `File -> Import...`\nin Postman's top menu bar. Once clicked, a dialog will open asking you to specify what to import. Either drag the\nedited `swagger.json` into the dialog, or click the `Choose Files` button and point Postman to the document.\nOnce the API's `swagger.json` was imported into postman, you will have a Postman collection called\n`Gambio REST API v3` available, allowing you to quickly dive into the Gambio GX4 RESTful API v3.\n\n\n## Optional Query Parameters\n\nThere are some optional query parameters, that can be used for endpoints that generally return a collection of\ndocuments.\n\n__Note:__ The attributes that can be used for the following actions, are the same like the attributes of the\ndocuments in the HTTP response. A dot `.` can be used to address attributes in on a deeper level.\n\n\n### Filtering\n\nYou can filter the documents of a collection by using the query parameter `filter` like:\n\n- GET `/api.php/v3/withdrawals?filter[customer.firstName]=John` will return all withdrawals of customers with first\n  name `John`.\n- GET `/api.php/v3/withdrawals?filter[customer.firstName]=J*` will return all withdrawals of customers whose first\n  name begins with `J`.\n- GET `/api.php/v3/withdrawals?filter[customer.firstName]=J*&filter[id]=*1` will return all withdrawals of customers\n  whose first name begins with `J` and withdrawal IDs will end with an one.\n- GET `/api.php/v3/withdrawals?filter[id]=gt|42` will return all withdrawals with an ID that is greater than `42`.\n- GET `/api.php/v3/withdrawals?filter[id]=gte|42` will return all withdrawals with an ID that is equals or greater\n  than `42`.\n- GET `/api.php/v3/withdrawals?filter[id]=lt|42` will return all withdrawals with an ID that is less than `42`.\n- GET `/api.php/v3/withdrawals?filter[id]=lte|42` will return all withdrawals with an ID that is equals or less\n  than `42`.\n- GET `/api.php/v3/withdrawals?filter[id]=neq|42` will return all withdrawals with an ID that is not equal to `42`.\n- GET `/api.php/v3/withdrawals?filter[date]=eq|2020-04-05` or GET `/api.php/v3/customers?filter[date]=2020-04-05`\n  will return all withdrawals with a withdrawal date of `2020-04-05`.\n- GET `/api.php/v3/withdrawals?filter[createdByAdmin]=1` will return all withdrawals that have been created by an\n  admin.\n\n\n### Sorting\n\nThe sorting order can be modified by using the query parameter `sort`. This parameter always expects a comma separated\nlist of the document attributes. A `+` (ascending) or `-` (descending) at the beginning of a attribute can be used\nmodify the order. If no specific order is provided than a ascending order should be used.\n\n**Example:** `/api.php/v3/withdrawals?sort=-customer.firstName,+customer.lastName`\n\n\n### Pagination\n\nThe query parameters `page` and `per-page` can be used for pagination.\n\n**Example:** `/api.php/v3/withdrawals?per-page=5&page=3`\n\n\n### Trim documents\n\nEndpoint providing a collection of specific documents (like `/api.php/v3/withdrawals`), offer the possibility to reduce\nthe amount of information inside the provided documents. By using the query parameter `fields` you are able to provided\na comma separated list of document attributes, which describe the structure of the returned documents.\n\n**Example:** `/api.php/v3/withdrawals?fields=id,customer.firstName,customer.lastName`\n"
    },
    {
      "name": "Currencies",
      "description": "The following endpoints can be used to manage the currencies of this shop.\n\nCurrently, the shop does only support endpoints to read currencies.\n"
    },
    {
      "name": "Customer",
      "description": "The following endpoints can be used to manage the customers of this shop."
    },
    {
      "name": "Customer Addon Values",
      "description": "The following endpoints can be used to manage the customer addon values of this shop."
    },
    {
      "name": "Customer Memo",
      "description": "The following endpoints can be used to manage the customer memos of this shop."
    },
    {
      "name": "ImageLists",
      "description": "The following endpoints can be used to manage the image lists of this shop.\n\nThe shown paths of the API endpoints are relative paths and references the\n`<shop-root>/images/product_images/original_images` directory. E.g. the image path `tshirds/red.jpg` references the\n`<shop-root>/images/product_images/original_images/tshirds/red.jpg` file.\n"
    },
    {
      "name": "Options",
      "description": "The following endpoints can be used to manage the options of this shop.\n\nCurrently, the shop does no support all fields inside the documents completly. The following fields aren't\nsupported yet: `details.description`, `values.details.description`, `values.weightType`, `values.priceType`,\n`values.stock`, `values.stockCentrallyManaged`\n"
    },
    {
      "name": "Parcel Services",
      "description": "The following endpoints can be used to manage the parcel services of this shop."
    },
    {
      "name": "Product Options",
      "description": "The following endpoints can be used to manage the product options of this shop.\n\nCurrently, the shop does no support all fields inside the documents completly. The following fields aren't\nsupported yet: `stockType`\n"
    },
    {
      "name": "Product Variants",
      "description": "The following endpoints can be used to manage the product variants of this shop.\n\nCurrently, the shop does no support all fields inside the documents completly. The following fields aren't\nsupported yet: `GTIN`, `ASIN`\n"
    },
    {
      "name": "Shop Config",
      "description": "The following endpoints allow reading the shops current configuration."
    },
    {
      "name": "Tracking Codes",
      "description": "The following endpoints can be used to manage the tracking codes of this shop."
    },
    {
      "name": "Withdrawals",
      "description": "The following endpoints can be used to manage the withdrawals of this shop."
    }
  ],
  "components": {
    "responses": {
      "missingAttribute": {
        "description": "A required attribute is missing.",
        "headers": {
          "X-Shop-Version": {
            "$ref": "#/components/headers/shopVersion"
          },
          "X-API-Version": {
            "$ref": "#/components/headers/apiVersion"
          },
          "X-Rate-Limit-Limit": {
            "$ref": "#/components/headers/rateLimitLimit"
          },
          "X-Rate-Limit-Remaining": {
            "$ref": "#/components/headers/rateLimitRemaining"
          },
          "X-Rate-Limit-Reset": {
            "$ref": "#/components/headers/rateLimitReset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "Attribute \"attribute.subAttribute\" is missing."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "example": {
                        "1": [
                          "Attribute \"attribute.subAttribute\" is missing."
                        ],
                        "ref-2": [
                          "Attribute \"attribute.subAttribute\" is missing.",
                          "Attribute \"attribute2\" is missing."
                        ]
                      }
                    }
                  ]
                },
                "_meta": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "notFound": {
        "description": "Requests document could not be found.",
        "headers": {
          "X-Shop-Version": {
            "$ref": "#/components/headers/shopVersion"
          },
          "X-API-Version": {
            "$ref": "#/components/headers/apiVersion"
          },
          "X-Rate-Limit-Limit": {
            "$ref": "#/components/headers/rateLimitLimit"
          },
          "X-Rate-Limit-Remaining": {
            "$ref": "#/components/headers/rateLimitRemaining"
          },
          "X-Rate-Limit-Reset": {
            "$ref": "#/components/headers/rateLimitReset"
          }
        }
      },
      "conflictByDataOrAction": {
        "description": "There is conflict based on the provided data or action.",
        "headers": {
          "X-Shop-Version": {
            "$ref": "#/components/headers/shopVersion"
          },
          "X-API-Version": {
            "$ref": "#/components/headers/apiVersion"
          },
          "X-Rate-Limit-Limit": {
            "$ref": "#/components/headers/rateLimitLimit"
          },
          "X-Rate-Limit-Remaining": {
            "$ref": "#/components/headers/rateLimitRemaining"
          },
          "X-Rate-Limit-Reset": {
            "$ref": "#/components/headers/rateLimitReset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "<Sample-Business-Entity> already exists."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "example": {
                        "1": [
                          "<Sample-Business-Entity> already exists."
                        ],
                        "ref-2": [
                          "<Sample-Business-Entity> already exists.",
                          "<Sample-Business-Entity> can't do <Sample-Business-Action>."
                        ]
                      }
                    }
                  ]
                },
                "_meta": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "invalidData": {
        "description": "The provided data is invalid.",
        "headers": {
          "X-Shop-Version": {
            "$ref": "#/components/headers/shopVersion"
          },
          "X-API-Version": {
            "$ref": "#/components/headers/apiVersion"
          },
          "X-Rate-Limit-Limit": {
            "$ref": "#/components/headers/rateLimitLimit"
          },
          "X-Rate-Limit-Remaining": {
            "$ref": "#/components/headers/rateLimitRemaining"
          },
          "X-Rate-Limit-Reset": {
            "$ref": "#/components/headers/rateLimitReset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "Attribute \"attribute.subAttribute\" is invalid."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "example": {
                        "1": [
                          "Attribute \"attribute.subAttribute\" is invalid."
                        ],
                        "ref-2": [
                          "Attribute \"attribute.subAttribute\" is invalid.",
                          "Attribute \"attribute2\" is invalid."
                        ]
                      }
                    }
                  ]
                },
                "_meta": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "headers": {
      "shopVersion": {
        "description": "Current shop version.",
        "schema": {
          "type": "string",
          "example": "4.1.0.0"
        }
      },
      "apiVersion": {
        "description": "Current API version.",
        "schema": {
          "type": "string",
          "example": "3.0.0"
        }
      },
      "rateLimitLimit": {
        "description": "Request limit per time frame.",
        "schema": {
          "type": "integer",
          "example": 5000
        }
      },
      "rateLimitRemaining": {
        "description": "Number of requests left for current time frame.",
        "schema": {
          "type": "integer",
          "example": 4242
        }
      },
      "rateLimitReset": {
        "description": "Seconds til the current rate limit resets.",
        "schema": {
          "type": "integer",
          "example": 3500
        }
      }
    },
    "parameters": {
      "query-fields": {
        "name": "fields",
        "in": "query",
        "description": "Optional query parameter for trimming the provided documents. Parameter represents a comma separated list of attributes.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "id,customer,orders.id"
        }
      },
      "query-sort": {
        "name": "sort",
        "in": "query",
        "description": "Optional query parameter for sorting. Parameter represents a comma separated list of attributes.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "-creationDate,+customer.firstName"
        }
      },
      "query-perPage": {
        "name": "per-page",
        "in": "query",
        "description": "Optional query parameter to limiting the provided documents.",
        "required": false,
        "schema": {
          "maximum": 100,
          "minimum": 1,
          "type": "integer",
          "example": 25,
          "default": 25
        }
      },
      "query-page": {
        "name": "page",
        "in": "query",
        "description": "Optional query parameter to define current page.",
        "required": false,
        "schema": {
          "minimum": 1,
          "type": "integer",
          "example": 2,
          "default": 1
        }
      },
      "query-filter-image-list": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "name": "*Red*",
            "localPath": "*red.png",
            "decimalPlaces": "2"
          }
        }
      },
      "query-filter-image-list-images": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "imageText": "*Flower*"
          }
        }
      },
      "query-filter-currency": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "name": "Dollar",
            "code": "US*",
            "textType": "title"
          }
        }
      },
      "query-filter-customer": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "personalInformation.firstName": "Max",
            "contactInformation.email": "*@example.org",
            "businessInformation.companyName": "Gambio%20GmbH",
            "credit": "gte|0"
          }
        }
      },
      "query-filter-customer-addon-value": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "key": "myAddonKey",
            "value": "1"
          }
        }
      },
      "query-filter-customer-memo": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "creatorId": "1",
            "content": "*Important*",
            "creationTime": "gte|2023-01-14"
          }
        }
      },
      "query-filter-options": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "type": "Dropdown",
            "details.label": "Size",
            "values.weight": "gte|2",
            "values.stock": "lt|10"
          }
        }
      },
      "query-filter-parcel-services": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "name": "*Hermes*",
            "isDefault": "0",
            "descriptions.url": "https://www.myhermes.de*"
          }
        }
      },
      "query-filter-product-options": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "productId": "2",
            "details.optionValueId": "3",
            "price": "gte|2",
            "values.stock": "lt|10"
          }
        }
      },
      "query-filter-product-variants": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "combination": "1-1|2-4",
            "price": "gte|2",
            "stock": "lt|10"
          }
        }
      },
      "query-filter-tracking-codes": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "isReturnDelivery": "1",
            "orderId": "400210",
            "parcelService.name": "*Hermes*",
            "createdOn": "gte|2023-01-14"
          }
        }
      },
      "query-filter-withdrawals": {
        "name": "filter",
        "in": "query",
        "description": "Optional query parameter for filtering. Parameter represents an object, which is used to filter the provided documents.",
        "required": false,
        "style": "deepObject",
        "explode": true,
        "schema": {
          "type": "object",
          "example": {
            "order.id": "400210",
            "order.creationDate": "gte|2023-01-14",
            "createdByAdmin": "1"
          }
        }
      }
    },
    "schemas": {
      "withdrawals-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "withdrawals-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "withdrawals-customerAddress": {
        "required": [
          "street",
          "postcode",
          "city",
          "country"
        ],
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "Parallelweg 30"
          },
          "postcode": {
            "type": "string",
            "example": "28219"
          },
          "city": {
            "type": "string",
            "example": "Bremen"
          },
          "country": {
            "type": "string",
            "example": "Deutschland"
          }
        }
      },
      "withdrawals-customerDetails": {
        "required": [
          "id",
          "gender",
          "firstName",
          "lastName",
          "address",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "nullable": true
          },
          "gender": {
            "type": "string",
            "description": "Determines the gender of the customer. `m` for male, `f` for female, and `o` for other.",
            "enum": [
              "m",
              "f",
              "o",
              ""
            ],
            "example": "o"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "address": {
            "required": [
              "street",
              "postcode",
              "city",
              "country"
            ],
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "Parallelweg 30"
              },
              "postcode": {
                "type": "string",
                "example": "28219"
              },
              "city": {
                "type": "string",
                "example": "Bremen"
              },
              "country": {
                "type": "string",
                "example": "Deutschland"
              }
            }
          },
          "email": {
            "type": "string",
            "example": "admin@example.org"
          }
        }
      },
      "withdrawals-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "withdrawals-orderDetails": {
        "required": [
          "id",
          "creationDate",
          "deliveryDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "datetime",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "datetime",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35",
            "nullable": true
          }
        }
      },
      "withdrawals-withdrawal": {
        "required": [
          "id",
          "order",
          "customer",
          "date",
          "content",
          "createdByAdmin",
          "createdOn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "order": {
            "required": [
              "id",
              "creationDate",
              "deliveryDate"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1,
                "nullable": true
              },
              "creationDate": {
                "type": "string",
                "format": "datetime",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                "example": "2020-04-15 14:30:35",
                "nullable": true
              },
              "deliveryDate": {
                "type": "string",
                "format": "datetime",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                "example": "2020-04-15 14:30:35",
                "nullable": true
              }
            }
          },
          "customer": {
            "required": [
              "id",
              "gender",
              "firstName",
              "lastName",
              "address",
              "email"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1,
                "nullable": true
              },
              "gender": {
                "type": "string",
                "description": "Determines the gender of the customer. `m` for male, `f` for female, and `o` for other.",
                "enum": [
                  "m",
                  "f",
                  "o",
                  ""
                ],
                "example": "o"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "address": {
                "required": [
                  "street",
                  "postcode",
                  "city",
                  "country"
                ],
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "Parallelweg 30"
                  },
                  "postcode": {
                    "type": "string",
                    "example": "28219"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bremen"
                  },
                  "country": {
                    "type": "string",
                    "example": "Deutschland"
                  }
                }
              },
              "email": {
                "type": "string",
                "example": "admin@example.org"
              }
            }
          },
          "date": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35"
          },
          "content": {
            "type": "string",
            "example": "Hiermit widerrufe ich ..."
          },
          "createdByAdmin": {
            "type": "boolean",
            "example": true
          },
          "createdOn": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35",
            "nullable": true
          }
        }
      },
      "withdrawals-withdrawalData": {
        "required": [
          "order",
          "customer",
          "date",
          "content",
          "createdByAdmin"
        ],
        "type": "object",
        "properties": {
          "order": {
            "required": [
              "id",
              "creationDate",
              "deliveryDate"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1,
                "nullable": true
              },
              "creationDate": {
                "type": "string",
                "format": "datetime",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                "example": "2020-04-15 14:30:35",
                "nullable": true
              },
              "deliveryDate": {
                "type": "string",
                "format": "datetime",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                "example": "2020-04-15 14:30:35",
                "nullable": true
              }
            }
          },
          "customer": {
            "required": [
              "id",
              "gender",
              "firstName",
              "lastName",
              "address",
              "email"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1,
                "nullable": true
              },
              "gender": {
                "type": "string",
                "description": "Determines the gender of the customer. `m` for male, `f` for female, and `o` for other.",
                "enum": [
                  "m",
                  "f",
                  "o",
                  ""
                ],
                "example": "o"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "address": {
                "required": [
                  "street",
                  "postcode",
                  "city",
                  "country"
                ],
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "Parallelweg 30"
                  },
                  "postcode": {
                    "type": "string",
                    "example": "28219"
                  },
                  "city": {
                    "type": "string",
                    "example": "Bremen"
                  },
                  "country": {
                    "type": "string",
                    "example": "Deutschland"
                  }
                }
              },
              "email": {
                "type": "string",
                "example": "admin@example.org"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "datetime",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35"
          },
          "content": {
            "type": "string",
            "example": "Hiermit widerrufe ich ..."
          },
          "createdByAdmin": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "withdrawals-withdrawalId": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "example": "1"
      },
      "withdrawals-withdrawalIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "1"
        }
      },
      "withdrawals-withdrawals": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "order",
            "customer",
            "date",
            "content",
            "createdByAdmin",
            "createdOn"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "order": {
              "required": [
                "id",
                "creationDate",
                "deliveryDate"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1,
                  "nullable": true
                },
                "creationDate": {
                  "type": "string",
                  "format": "datetime",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                  "example": "2020-04-15 14:30:35",
                  "nullable": true
                },
                "deliveryDate": {
                  "type": "string",
                  "format": "datetime",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                  "example": "2020-04-15 14:30:35",
                  "nullable": true
                }
              }
            },
            "customer": {
              "required": [
                "id",
                "gender",
                "firstName",
                "lastName",
                "address",
                "email"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1,
                  "nullable": true
                },
                "gender": {
                  "type": "string",
                  "description": "Determines the gender of the customer. `m` for male, `f` for female, and `o` for other.",
                  "enum": [
                    "m",
                    "f",
                    "o",
                    ""
                  ],
                  "example": "o"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "address": {
                  "required": [
                    "street",
                    "postcode",
                    "city",
                    "country"
                  ],
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Parallelweg 30"
                    },
                    "postcode": {
                      "type": "string",
                      "example": "28219"
                    },
                    "city": {
                      "type": "string",
                      "example": "Bremen"
                    },
                    "country": {
                      "type": "string",
                      "example": "Deutschland"
                    }
                  }
                },
                "email": {
                  "type": "string",
                  "example": "admin@example.org"
                }
              }
            },
            "date": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
              "example": "2020-04-15 14:30:35"
            },
            "content": {
              "type": "string",
              "example": "Hiermit widerrufe ich ..."
            },
            "createdByAdmin": {
              "type": "boolean",
              "example": true
            },
            "createdOn": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
              "example": "2020-04-15 14:30:35",
              "nullable": true
            }
          }
        }
      },
      "withdrawals-withdrawalsData": {
        "type": "array",
        "items": {
          "required": [
            "order",
            "customer",
            "date",
            "content",
            "createdByAdmin"
          ],
          "type": "object",
          "properties": {
            "order": {
              "required": [
                "id",
                "creationDate",
                "deliveryDate"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1,
                  "nullable": true
                },
                "creationDate": {
                  "type": "string",
                  "format": "datetime",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                  "example": "2020-04-15 14:30:35",
                  "nullable": true
                },
                "deliveryDate": {
                  "type": "string",
                  "format": "datetime",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                  "example": "2020-04-15 14:30:35",
                  "nullable": true
                }
              }
            },
            "customer": {
              "required": [
                "id",
                "gender",
                "firstName",
                "lastName",
                "address",
                "email"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1,
                  "nullable": true
                },
                "gender": {
                  "type": "string",
                  "description": "Determines the gender of the customer. `m` for male, `f` for female, and `o` for other.",
                  "enum": [
                    "m",
                    "f",
                    "o",
                    ""
                  ],
                  "example": "o"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "address": {
                  "required": [
                    "street",
                    "postcode",
                    "city",
                    "country"
                  ],
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string",
                      "example": "Parallelweg 30"
                    },
                    "postcode": {
                      "type": "string",
                      "example": "28219"
                    },
                    "city": {
                      "type": "string",
                      "example": "Bremen"
                    },
                    "country": {
                      "type": "string",
                      "example": "Deutschland"
                    }
                  }
                },
                "email": {
                  "type": "string",
                  "example": "admin@example.org"
                }
              }
            },
            "date": {
              "type": "string",
              "format": "datetime",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
              "example": "2020-04-15 14:30:35"
            },
            "content": {
              "type": "string",
              "example": "Hiermit widerrufe ich ..."
            },
            "createdByAdmin": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "parcelServices-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "parcelServices-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "parcelServices-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "parcelServices-parcelService": {
        "required": [
          "id",
          "name",
          "isDefault",
          "descriptions",
          "shipmentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": "DHL"
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "url",
                "comment"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en"
                },
                "url": {
                  "type": "string",
                  "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
                },
                "comment": {
                  "type": "string",
                  "example": "You can access the shipment tracking for your order by visiting the link above."
                }
              }
            }
          },
          "shipmentType": {
            "type": "string",
            "example": "shipment type"
          }
        }
      },
      "parcelServices-parcelServiceData": {
        "required": [
          "id",
          "name",
          "isDefault",
          "descriptions",
          "shipmentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": "DHL"
          },
          "isDefault": {
            "type": "boolean",
            "example": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "url",
                "comment"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en"
                },
                "url": {
                  "type": "string",
                  "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
                },
                "comment": {
                  "type": "string",
                  "example": "You can access the shipment tracking for your order by visiting the link above."
                }
              }
            }
          },
          "shipmentType": {
            "type": "string",
            "example": "shipment type"
          }
        }
      },
      "parcelServices-parcelServiceDescription": {
        "required": [
          "languageCode",
          "url",
          "comment"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "example": "en"
          },
          "url": {
            "type": "string",
            "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
          },
          "comment": {
            "type": "string",
            "example": "You can access the shipment tracking for your order by visiting the link above."
          }
        }
      },
      "parcelServices-parcelServiceDescriptions": {
        "type": "array",
        "items": {
          "required": [
            "languageCode",
            "url",
            "comment"
          ],
          "type": "object",
          "properties": {
            "languageCode": {
              "type": "string",
              "example": "en"
            },
            "url": {
              "type": "string",
              "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
            },
            "comment": {
              "type": "string",
              "example": "You can access the shipment tracking for your order by visiting the link above."
            }
          }
        }
      },
      "parcelServices-parcelServiceId": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "example": "1"
      },
      "parcelServices-parcelServiceIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "1"
        }
      },
      "parcelServices-parcelServices": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "name",
            "isDefault",
            "descriptions",
            "shipmentType"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "name": {
              "type": "string",
              "example": "DHL"
            },
            "isDefault": {
              "type": "boolean",
              "example": true
            },
            "descriptions": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "url",
                  "comment"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en"
                  },
                  "url": {
                    "type": "string",
                    "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
                  },
                  "comment": {
                    "type": "string",
                    "example": "You can access the shipment tracking for your order by visiting the link above."
                  }
                }
              }
            },
            "shipmentType": {
              "type": "string",
              "example": "shipment type"
            }
          }
        }
      },
      "parcelServices-parcelServicesData": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "name",
            "isDefault",
            "descriptions",
            "shipmentType"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "name": {
              "type": "string",
              "example": "DHL"
            },
            "isDefault": {
              "type": "boolean",
              "example": true
            },
            "descriptions": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "url",
                  "comment"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en"
                  },
                  "url": {
                    "type": "string",
                    "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc={TRACKING_NUMBER}&rfn=&extendedSearch=true"
                  },
                  "comment": {
                    "type": "string",
                    "example": "You can access the shipment tracking for your order by visiting the link above."
                  }
                }
              }
            },
            "shipmentType": {
              "type": "string",
              "example": "shipment type"
            }
          }
        }
      },
      "trackingCodes-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "trackingCodes-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "trackingCodes-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {
              "parcel-service": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "trackingCodes-parcelServiceDetails": {
        "required": [
          "id",
          "languageCode",
          "name",
          "url",
          "comment",
          "shipmentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "languageCode": {
            "type": "string",
            "example": "en",
            "description": "Language code that had been used for all language-dependent attributes, like name, url, and comment."
          },
          "name": {
            "type": "string",
            "example": "DHL",
            "description": "Name based on defined parcel service and language."
          },
          "url": {
            "type": "string",
            "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc=123456789&rfn=&extendedSearch=true",
            "description": "URL including trackng code based on defined parcel service and language."
          },
          "comment": {
            "type": "string",
            "example": "You can access the shipment tracking for your order by visiting the link above.",
            "description": "Comment based on defined parcel service and language."
          },
          "shipmentType": {
            "type": "string",
            "example": "Sample Shipment Type",
            "description": "The is a free form input field to define the type of the shipment."
          }
        }
      },
      "trackingCodes-trackingCode": {
        "required": [
          "id",
          "orderId",
          "code",
          "isReturnDelivery",
          "parcelService",
          "createdOn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "orderId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "code": {
            "type": "string",
            "example": "123456789"
          },
          "isReturnDelivery": {
            "type": "boolean",
            "example": true
          },
          "parcelService": {
            "required": [
              "id",
              "languageCode",
              "name",
              "url",
              "comment",
              "shipmentType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1
              },
              "languageCode": {
                "type": "string",
                "example": "en",
                "description": "Language code that had been used for all language-dependent attributes, like name, url, and comment."
              },
              "name": {
                "type": "string",
                "example": "DHL",
                "description": "Name based on defined parcel service and language."
              },
              "url": {
                "type": "string",
                "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc=123456789&rfn=&extendedSearch=true",
                "description": "URL including trackng code based on defined parcel service and language."
              },
              "comment": {
                "type": "string",
                "example": "You can access the shipment tracking for your order by visiting the link above.",
                "description": "Comment based on defined parcel service and language."
              },
              "shipmentType": {
                "type": "string",
                "example": "Sample Shipment Type",
                "description": "The is a free form input field to define the type of the shipment."
              }
            }
          },
          "createdOn": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35"
          }
        }
      },
      "trackingCodes-trackingCodeData": {
        "required": [
          "orderId",
          "code",
          "isReturnDelivery",
          "parcelService",
          "createdOn"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "code": {
            "type": "string",
            "example": "123456789"
          },
          "isReturnDelivery": {
            "type": "boolean",
            "example": true
          },
          "parcelService": {
            "required": [
              "id",
              "languageCode",
              "name",
              "url",
              "comment",
              "shipmentType"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1,
                "minimum": 1
              },
              "languageCode": {
                "type": "string",
                "example": "en",
                "description": "Language code that had been used for all language-dependent attributes, like name, url, and comment."
              },
              "name": {
                "type": "string",
                "example": "DHL",
                "description": "Name based on defined parcel service and language."
              },
              "url": {
                "type": "string",
                "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc=123456789&rfn=&extendedSearch=true",
                "description": "URL including trackng code based on defined parcel service and language."
              },
              "comment": {
                "type": "string",
                "example": "You can access the shipment tracking for your order by visiting the link above.",
                "description": "Comment based on defined parcel service and language."
              },
              "shipmentType": {
                "type": "string",
                "example": "Sample Shipment Type",
                "description": "The is a free form input field to define the type of the shipment."
              }
            }
          },
          "createdOn": {
            "type": "string",
            "format": "datetime",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
            "example": "2020-04-15 14:30:35"
          }
        }
      },
      "trackingCodes-trackingCodeId": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "example": "1"
      },
      "trackingCodes-trackingCodeIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "1"
        }
      },
      "withdrawals-withdrawalPatch": {
        "required": [
          "id",
          "order"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "order": {
            "required": [
              "date"
            ],
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "datetime",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                "example": "2020-04-15 14:30:35"
              }
            }
          }
        }
      },
      "withdrawals-withdrawalPatches": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "order"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "order": {
              "required": [
                "date"
              ],
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "datetime",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
                  "example": "2020-04-15 14:30:35"
                }
              }
            }
          }
        }
      },
      "trackingCodes-trackingCodes": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "orderId",
            "code",
            "isReturnDelivery",
            "parcelService",
            "createdOn"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "orderId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "code": {
              "type": "string",
              "example": "123456789"
            },
            "isReturnDelivery": {
              "type": "boolean",
              "example": true
            },
            "parcelService": {
              "required": [
                "id",
                "languageCode",
                "name",
                "url",
                "comment",
                "shipmentType"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                },
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "description": "Language code that had been used for all language-dependent attributes, like name, url, and comment."
                },
                "name": {
                  "type": "string",
                  "example": "DHL",
                  "description": "Name based on defined parcel service and language."
                },
                "url": {
                  "type": "string",
                  "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc=123456789&rfn=&extendedSearch=true",
                  "description": "URL including trackng code based on defined parcel service and language."
                },
                "comment": {
                  "type": "string",
                  "example": "You can access the shipment tracking for your order by visiting the link above.",
                  "description": "Comment based on defined parcel service and language."
                },
                "shipmentType": {
                  "type": "string",
                  "example": "Sample Shipment Type",
                  "description": "The is a free form input field to define the type of the shipment."
                }
              }
            },
            "createdOn": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
              "example": "2020-04-15 14:30:35"
            }
          }
        }
      },
      "trackingCodes-trackingCodesData": {
        "type": "array",
        "items": {
          "required": [
            "orderId",
            "code",
            "isReturnDelivery",
            "parcelService",
            "createdOn"
          ],
          "type": "object",
          "properties": {
            "orderId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "code": {
              "type": "string",
              "example": "123456789"
            },
            "isReturnDelivery": {
              "type": "boolean",
              "example": true
            },
            "parcelService": {
              "required": [
                "id",
                "languageCode",
                "name",
                "url",
                "comment",
                "shipmentType"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                },
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "description": "Language code that had been used for all language-dependent attributes, like name, url, and comment."
                },
                "name": {
                  "type": "string",
                  "example": "DHL",
                  "description": "Name based on defined parcel service and language."
                },
                "url": {
                  "type": "string",
                  "example": "http:\\/\\/nolp.dhl.de\\/nextt-online-public\\/set_identcodes.do?lang=en&idc=123456789&rfn=&extendedSearch=true",
                  "description": "URL including trackng code based on defined parcel service and language."
                },
                "comment": {
                  "type": "string",
                  "example": "You can access the shipment tracking for your order by visiting the link above.",
                  "description": "Comment based on defined parcel service and language."
                },
                "shipmentType": {
                  "type": "string",
                  "example": "Sample Shipment Type",
                  "description": "The is a free form input field to define the type of the shipment."
                }
              }
            },
            "createdOn": {
              "type": "string",
              "format": "datetime",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(\\s\\d{2}:\\d{2}:\\d{2})?$",
              "example": "2020-04-15 14:30:35"
            }
          }
        }
      },
      "shopConfig-shopConfig": {
        "type": "array",
        "items": {
          "required": [
            "key",
            "value"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "DEFAULT_CURRENCY",
              "minLength": 1
            },
            "value": {
              "type": "string",
              "nullable": true,
              "example": "EUR"
            }
          }
        }
      },
      "shopConfig-shopConfigElement": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "DEFAULT_CURRENCY",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "nullable": true,
            "example": "EUR"
          }
        }
      },
      "shopConfig-shopConfigElementValue": {
        "type": "string",
        "nullable": true,
        "example": "EUR"
      },
      "options-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "options-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "options-optionId": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "example": "1"
      },
      "options-optionIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "1"
        }
      },
      "options-optionValueId": {
        "type": "integer",
        "format": "int32",
        "minimum": 1,
        "example": "1"
      },
      "options-optionValueIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "1"
        }
      },
      "options-option": {
        "required": [
          "id",
          "type",
          "sortOrder",
          "details",
          "values"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "type": {
            "type": "string",
            "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
            "enum": [
              "Dropdown",
              "Image",
              "Radio",
              "Text",
              "BoxedText"
            ],
            "example": "Dropdown"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0,
            "default": 1
          },
          "details": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "label",
                "adminLabel",
                "description"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "patten": "^\\w{2}$"
                },
                "label": {
                  "type": "string",
                  "example": "Size",
                  "minLength": 1
                },
                "adminLabel": {
                  "type": "string",
                  "example": "Size (T-Shirts)",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "example": "An additional description ..."
                }
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "sortOrder",
                "details",
                "image",
                "modelNumber",
                "weight",
                "price",
                "stockType",
                "stock",
                "stockCentrallyManaged"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                },
                "sortOrder": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 0,
                  "default": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "required": [
                      "languageCode",
                      "label",
                      "description"
                    ],
                    "type": "object",
                    "properties": {
                      "languageCode": {
                        "type": "string",
                        "example": "en",
                        "patten": "^\\w{2}$"
                      },
                      "label": {
                        "type": "string",
                        "example": "XXL",
                        "minLength": 1
                      },
                      "description": {
                        "type": "string",
                        "example": "A sample description"
                      }
                    }
                  }
                },
                "image": {
                  "type": "string",
                  "example": "xxl.jpg"
                },
                "modelNumber": {
                  "type": "string",
                  "example": "xxl"
                },
                "weight": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "price": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "stockType": {
                  "type": "string",
                  "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
                  "enum": [
                    "only-positive",
                    "all-numbers",
                    "not-managed"
                  ],
                  "example": "only-positive",
                  "minLength": 1
                },
                "stock": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "stockCentrallyManaged": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "options-option-creation": {
        "required": [
          "type",
          "sortOrder",
          "details"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
            "enum": [
              "Dropdown",
              "Image",
              "Radio",
              "Text",
              "BoxedText"
            ],
            "example": "Dropdown"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0,
            "default": 1
          },
          "details": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "label",
                "adminLabel",
                "description"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "patten": "^\\w{2}$"
                },
                "label": {
                  "type": "string",
                  "example": "Size",
                  "minLength": 1
                },
                "adminLabel": {
                  "type": "string",
                  "example": "Size (T-Shirts)",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "example": "An additional description ..."
                }
              }
            }
          }
        }
      },
      "options-option-update": {
        "required": [
          "id",
          "type",
          "sortOrder",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "type": {
            "type": "string",
            "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
            "enum": [
              "Dropdown",
              "Image",
              "Radio",
              "Text",
              "BoxedText"
            ],
            "example": "Dropdown"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0,
            "default": 1
          },
          "details": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "label",
                "adminLabel",
                "description"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "patten": "^\\w{2}$"
                },
                "label": {
                  "type": "string",
                  "example": "Size",
                  "minLength": 1
                },
                "adminLabel": {
                  "type": "string",
                  "example": "Size (T-Shirts)",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "example": "An additional description ..."
                }
              }
            }
          },
          "values": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "sortOrder",
                "details",
                "image",
                "modelNumber",
                "weight",
                "price",
                "stockType",
                "stock",
                "stockCentrallyManaged"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                },
                "sortOrder": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 0,
                  "default": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "required": [
                      "languageCode",
                      "label",
                      "description"
                    ],
                    "type": "object",
                    "properties": {
                      "languageCode": {
                        "type": "string",
                        "example": "en",
                        "patten": "^\\w{2}$"
                      },
                      "label": {
                        "type": "string",
                        "example": "XXL",
                        "minLength": 1
                      },
                      "description": {
                        "type": "string",
                        "example": "A sample description"
                      }
                    }
                  }
                },
                "image": {
                  "type": "string",
                  "example": "xxl.jpg"
                },
                "modelNumber": {
                  "type": "string",
                  "example": "xxl"
                },
                "weight": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "price": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "stockType": {
                  "type": "string",
                  "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
                  "enum": [
                    "only-positive",
                    "all-numbers",
                    "not-managed"
                  ],
                  "example": "only-positive",
                  "minLength": 1
                },
                "stock": {
                  "type": "number",
                  "format": "double",
                  "example": 13.37
                },
                "stockCentrallyManaged": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "options-option-values": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "sortOrder",
            "details",
            "image",
            "modelNumber",
            "weight",
            "price",
            "stockType",
            "stock",
            "stockCentrallyManaged"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "XXL",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "A sample description"
                  }
                }
              }
            },
            "image": {
              "type": "string",
              "example": "xxl.jpg"
            },
            "modelNumber": {
              "type": "string",
              "example": "xxl"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockCentrallyManaged": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "options-option-values-create": {
        "type": "array",
        "items": {
          "required": [
            "sortOrder",
            "details",
            "image",
            "modelNumber",
            "weight",
            "price",
            "stockType",
            "stock",
            "stockCentrallyManaged"
          ],
          "type": "object",
          "properties": {
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "XXL",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "A sample description"
                  }
                }
              }
            },
            "image": {
              "type": "string",
              "example": "xxl.jpg"
            },
            "modelNumber": {
              "type": "string",
              "example": "xxl"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockCentrallyManaged": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "options-option-values-update": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "sortOrder",
            "details",
            "image",
            "modelNumber",
            "weight",
            "price",
            "stockType",
            "stock",
            "stockCentrallyManaged"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "XXL",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "A sample description"
                  }
                }
              }
            },
            "image": {
              "type": "string",
              "example": "xxl.jpg"
            },
            "modelNumber": {
              "type": "string",
              "example": "xxl"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockCentrallyManaged": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "options-options": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "type",
            "sortOrder",
            "details",
            "values"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "type": {
              "type": "string",
              "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
              "enum": [
                "Dropdown",
                "Image",
                "Radio",
                "Text",
                "BoxedText"
              ],
              "example": "Dropdown"
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "adminLabel",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "Size",
                    "minLength": 1
                  },
                  "adminLabel": {
                    "type": "string",
                    "example": "Size (T-Shirts)",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "An additional description ..."
                  }
                }
              }
            },
            "values": {
              "type": "array",
              "items": {
                "required": [
                  "id",
                  "sortOrder",
                  "details",
                  "image",
                  "modelNumber",
                  "weight",
                  "price",
                  "stockType",
                  "stock",
                  "stockCentrallyManaged"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  },
                  "sortOrder": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 0,
                    "default": 1
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "required": [
                        "languageCode",
                        "label",
                        "description"
                      ],
                      "type": "object",
                      "properties": {
                        "languageCode": {
                          "type": "string",
                          "example": "en",
                          "patten": "^\\w{2}$"
                        },
                        "label": {
                          "type": "string",
                          "example": "XXL",
                          "minLength": 1
                        },
                        "description": {
                          "type": "string",
                          "example": "A sample description"
                        }
                      }
                    }
                  },
                  "image": {
                    "type": "string",
                    "example": "xxl.jpg"
                  },
                  "modelNumber": {
                    "type": "string",
                    "example": "xxl"
                  },
                  "weight": {
                    "type": "number",
                    "format": "double",
                    "example": 13.37
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "example": 13.37
                  },
                  "stockType": {
                    "type": "string",
                    "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
                    "enum": [
                      "only-positive",
                      "all-numbers",
                      "not-managed"
                    ],
                    "example": "only-positive",
                    "minLength": 1
                  },
                  "stock": {
                    "type": "number",
                    "format": "double",
                    "example": 13.37
                  },
                  "stockCentrallyManaged": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        }
      },
      "options-options-creation": {
        "type": "array",
        "items": {
          "required": [
            "type",
            "sortOrder",
            "details"
          ],
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
              "enum": [
                "Dropdown",
                "Image",
                "Radio",
                "Text",
                "BoxedText"
              ],
              "example": "Dropdown"
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "adminLabel",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "Size",
                    "minLength": 1
                  },
                  "adminLabel": {
                    "type": "string",
                    "example": "Size (T-Shirts)",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "An additional description ..."
                  }
                }
              }
            }
          }
        }
      },
      "options-options-update": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "type",
            "sortOrder",
            "details"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "type": {
              "type": "string",
              "description": "Determines how this option will be shown on the product details page. For more information take a look into the developers' documentation of the *option* domain.",
              "enum": [
                "Dropdown",
                "Image",
                "Radio",
                "Text",
                "BoxedText"
              ],
              "example": "Dropdown"
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "details": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "label",
                  "adminLabel",
                  "description"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "patten": "^\\w{2}$"
                  },
                  "label": {
                    "type": "string",
                    "example": "Size",
                    "minLength": 1
                  },
                  "adminLabel": {
                    "type": "string",
                    "example": "Size (T-Shirts)",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "example": "An additional description ..."
                  }
                }
              }
            }
          }
        }
      },
      "options-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "options-optionPatches": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "sortOrder"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "productVariants-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "productVariants-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "customer": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "imageList": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            },
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/...",
              "imageList": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "productVariants-variants": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "combination",
            "sortOrder",
            "modelNumber",
            "GTIN",
            "ASIN",
            "EAN",
            "stockType",
            "stock",
            "weightType",
            "weight",
            "priceType",
            "price",
            "vpeScalarValue",
            "vpeUnitId",
            "deliveryTimeId",
            "imageListId"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "combination": {
              "type": "array",
              "items": {
                "required": [
                  "optionId",
                  "optionValueId"
                ],
                "type": "object",
                "properties": {
                  "optionId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  },
                  "optionValueId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  }
                }
              }
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "GTIN": {
              "type": "string",
              "example": "00012345678905"
            },
            "ASIN": {
              "type": "string",
              "example": "B0006GQ8RW"
            },
            "EAN": {
              "type": "string",
              "example": "401234567890"
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "weightType": {
              "type": "string",
              "description": "Determines if the set variant weight should be added to the product weight or if it replaces the product weight.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "priceType": {
              "type": "string",
              "description": "Determines if the set variant price should be added to the product price or if it replaces the product price.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeScalarValue": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeUnitId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "deliveryTimeId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            }
          }
        }
      },
      "productVariants-variant": {
        "required": [
          "id",
          "combination",
          "sortOrder",
          "modelNumber",
          "GTIN",
          "ASIN",
          "EAN",
          "stockType",
          "stock",
          "weightType",
          "weight",
          "priceType",
          "price",
          "vpeScalarValue",
          "vpeUnitId",
          "deliveryTimeId",
          "imageListId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "combination": {
            "type": "array",
            "items": {
              "required": [
                "optionId",
                "optionValueId"
              ],
              "type": "object",
              "properties": {
                "optionId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                },
                "optionValueId": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 1
                }
              }
            }
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0
          },
          "modelNumber": {
            "type": "string",
            "example": "abcdef-12345"
          },
          "GTIN": {
            "type": "string",
            "example": "00012345678905"
          },
          "ASIN": {
            "type": "string",
            "example": "B0006GQ8RW"
          },
          "EAN": {
            "type": "string",
            "example": "401234567890"
          },
          "stockType": {
            "type": "string",
            "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
            "enum": [
              "only-positive",
              "all-numbers",
              "not-managed"
            ],
            "example": "only-positive",
            "minLength": 1
          },
          "stock": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "weightType": {
            "type": "string",
            "description": "Determines if the set variant weight should be added to the product weight or if it replaces the product weight.",
            "enum": [
              "addition",
              "replacing"
            ],
            "example": "replacing",
            "minLength": 1
          },
          "weight": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "priceType": {
            "type": "string",
            "description": "Determines if the set variant price should be added to the product price or if it replaces the product price.",
            "enum": [
              "addition",
              "replacing"
            ],
            "example": "replacing",
            "minLength": 1
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "vpeScalarValue": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "vpeUnitId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "nullable": true
          },
          "deliveryTimeId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "imageListId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "nullable": true
          }
        }
      },
      "productVariants-patch": {
        "type": "array",
        "items": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "combination": {
              "type": "array",
              "items": {
                "required": [
                  "optionId",
                  "optionValueId"
                ],
                "type": "object",
                "properties": {
                  "optionId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  },
                  "optionValueId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  }
                }
              }
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "GTIN": {
              "type": "string",
              "example": "00012345678905"
            },
            "ASIN": {
              "type": "string",
              "example": "B0006GQ8RW"
            },
            "EAN": {
              "type": "string",
              "example": "401234567890"
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "weightType": {
              "type": "string",
              "description": "Determines if the set variant weight should be added to the product weight or if it replaces the product weight.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "priceType": {
              "type": "string",
              "description": "Determines if the set variant price should be added to the product price or if it replaces the product price.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeScalarValue": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeUnitId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "deliveryTimeId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            }
          }
        }
      },
      "productVariants-optionValues": {
        "type": "array",
        "items": {
          "required": [
            "optionId",
            "optionValueId"
          ],
          "type": "object",
          "properties": {
            "optionId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "optionValueId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            }
          }
        },
        "example": [
          {
            "optionId": 1,
            "optionValueId": 1
          },
          {
            "optionId": 2,
            "optionValueId": 2
          }
        ]
      },
      "productVariants-generation": {
        "type": "array",
        "items": {
          "required": [
            "optionId",
            "optionValueId"
          ],
          "type": "object",
          "properties": {
            "optionId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "optionValueId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            }
          }
        },
        "example": [
          {
            "optionId": 1,
            "optionValueId": 1
          },
          {
            "optionId": 1,
            "optionValueId": 2
          },
          {
            "optionId": 2,
            "optionValueId": 1
          },
          {
            "optionId": 2,
            "optionValueId": 2
          }
        ]
      },
      "productVariants-variants-creation": {
        "type": "array",
        "items": {
          "required": [
            "combination",
            "modelNumber",
            "GTIN",
            "ASIN",
            "EAN",
            "stockType",
            "stock",
            "weightType",
            "weight",
            "priceType",
            "price",
            "vpeScalarValue",
            "vpeUnitId",
            "deliveryTimeId"
          ],
          "type": "object",
          "properties": {
            "combination": {
              "type": "array",
              "items": {
                "required": [
                  "optionId",
                  "optionValueId"
                ],
                "type": "object",
                "properties": {
                  "optionId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  },
                  "optionValueId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 1
                  }
                }
              },
              "example": [
                {
                  "optionId": 1,
                  "optionValueId": 1
                },
                {
                  "optionId": 2,
                  "optionValueId": 4
                }
              ]
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0,
              "default": 1
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "GTIN": {
              "type": "string",
              "example": "00012345678905"
            },
            "ASIN": {
              "type": "string",
              "example": "B0006GQ8RW"
            },
            "EAN": {
              "type": "string",
              "example": "401234567890"
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37,
              "default": 0
            },
            "weightType": {
              "type": "string",
              "description": "Determines if the set variant weight should be added to the product weight or if it replaces the product weight.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "priceType": {
              "type": "string",
              "description": "Determines if the set variant price should be added to the product price or if it replaces the product price.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeScalarValue": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeUnitId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "deliveryTimeId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true,
              "default": null
            }
          }
        }
      },
      "productVariants-variants-update": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "combination",
            "sortOrder",
            "modelNumber",
            "GTIN",
            "ASIN",
            "EAN",
            "stockType",
            "stock",
            "weightType",
            "weight",
            "priceType",
            "price",
            "vpeScalarValue",
            "vpeUnitId",
            "deliveryTimeId",
            "imageListId"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "combination": {
              "type": "array",
              "items": {
                "required": [
                  "optionId",
                  "optionValueId"
                ],
                "type": "object",
                "properties": {
                  "optionId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "example": 1
                  },
                  "optionValueId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "example": 1
                  }
                }
              }
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "GTIN": {
              "type": "string",
              "example": "00012345678905"
            },
            "ASIN": {
              "type": "string",
              "example": "B0006GQ8RW"
            },
            "EAN": {
              "type": "string",
              "example": "401234567890"
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "weightType": {
              "type": "string",
              "description": "Determines if the set variant weight should be added to the product weight or if it replaces the product weight.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "priceType": {
              "type": "string",
              "description": "Determines if the set variant price should be added to the product price or if it replaces the product price.",
              "enum": [
                "addition",
                "replacing"
              ],
              "example": "replacing",
              "minLength": 1
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeScalarValue": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "vpeUnitId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "deliveryTimeId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            }
          }
        }
      },
      "productVariants-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "productVariants-option-ids": {
        "type": "array",
        "items": {
          "required": [
            "optionId"
          ],
          "type": "object",
          "properties": {
            "optionId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            }
          }
        },
        "example": [
          {
            "optionId": 1
          },
          {
            "optionId": 2
          }
        ]
      },
      "productVariants-option-ids-option-value-ids": {
        "description": "Option ID that should be removed, as well as the option value ID that is used to determine which combinations should be kept.",
        "type": "array",
        "items": {
          "required": [
            "optionId",
            "retainableOptionValueId"
          ],
          "type": "object",
          "properties": {
            "optionId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "retainableOptionValueId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "description": "Variant's that had this option value will be modified, while variants with other option values of that option will be removed"
            }
          }
        },
        "example": [
          {
            "optionId": 1,
            "retainableOptionValueId": 3
          }
        ]
      },
      "productVariants-variants-created": {
        "type": "array",
        "items": {
          "type": "integer",
          "example": 1
        }
      },
      "productOptions-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "productOptions-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "order": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "customer": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "option": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "imageList": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            },
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/...",
              "option": "https://example.org/api.php/v3/...",
              "imageList": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "productOptions-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "productOptions-productOptions": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "optionId",
            "optionValueId",
            "imageListId",
            "modelNumber",
            "weight",
            "price",
            "stockType",
            "stock",
            "sortOrder"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "example": 1
            },
            "optionId": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "example": 1
            },
            "optionValueId": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "example": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "productOptions-productOption": {
        "required": [
          "id",
          "optionId",
          "optionValueId",
          "imageListId",
          "modelNumber",
          "weight",
          "price",
          "stockType",
          "stock",
          "sortOrder"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 1
          },
          "optionId": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 1
          },
          "optionValueId": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 1
          },
          "imageListId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1,
            "nullable": true
          },
          "modelNumber": {
            "type": "string",
            "example": "abcdef-12345"
          },
          "weight": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "stockType": {
            "type": "string",
            "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
            "enum": [
              "only-positive",
              "all-numbers",
              "not-managed"
            ],
            "example": "only-positive",
            "minLength": 1
          },
          "stock": {
            "type": "number",
            "format": "double",
            "example": 13.37
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 0
          }
        }
      },
      "productOptions-productOptionsCreation": {
        "type": "array",
        "items": {
          "required": [
            "optionId",
            "optionValueId",
            "imageListId",
            "modelNumber",
            "weight",
            "price",
            "stockType",
            "stock",
            "sortOrder"
          ],
          "type": "object",
          "properties": {
            "optionId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "optionValueId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "nullable": true,
              "minimum": 1
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "productOptions-OptionsCreated": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      "productOptions-Patch": {
        "type": "array",
        "items": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "example": 1
            },
            "imageListId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "modelNumber": {
              "type": "string",
              "example": "abcdef-12345"
            },
            "weight": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "price": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "stockType": {
              "type": "string",
              "description": "Determines the behavior for the stock management. `only-positive` allows only positive stock values (including zero), `all-numbers` allows all numeric stock values, and `not-managed` means that this value is not considered for the stock management.",
              "enum": [
                "only-positive",
                "all-numbers",
                "not-managed"
              ],
              "example": "only-positive",
              "minLength": 1
            },
            "stock": {
              "type": "number",
              "format": "double",
              "example": 13.37
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "imageLists-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "imageLists-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {
              "order": "https://example.org/api.php/v3/...",
              "customer": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "imageLists-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "imageLists-imageLists": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "name",
            "images"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "name": {
              "type": "string",
              "example": "image lists #1",
              "minLength": 1
            },
            "images": {
              "type": "array",
              "items": {
                "required": [
                  "relativePath",
                  "url",
                  "titles",
                  "altTitles",
                  "sortOrder"
                ],
                "type": "object",
                "properties": {
                  "relativePath": {
                    "type": "string",
                    "example": "subdirectory/image.jpg",
                    "minLength": 1
                  },
                  "url": {
                    "type": "string",
                    "example": "https://www.my-shop.org/images/product_images/original_images/subdirectory/image.jpg",
                    "minLength": 1
                  },
                  "titles": {
                    "type": "array",
                    "items": {
                      "required": [
                        "languageCode",
                        "text"
                      ],
                      "type": "object",
                      "properties": {
                        "languageCode": {
                          "type": "string",
                          "example": "en",
                          "minLength": 1
                        },
                        "text": {
                          "type": "string",
                          "example": "text for image",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "altTitles": {
                    "type": "array",
                    "items": {
                      "required": [
                        "languageCode",
                        "text"
                      ],
                      "type": "object",
                      "properties": {
                        "languageCode": {
                          "type": "string",
                          "example": "en",
                          "minLength": 1
                        },
                        "text": {
                          "type": "string",
                          "example": "text for image",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "sortOrder": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "minimum": 0
                  }
                }
              }
            }
          }
        }
      },
      "imageLists-imageList": {
        "required": [
          "id",
          "name",
          "images"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": "image lists #1",
            "minLength": 1
          },
          "images": {
            "type": "array",
            "items": {
              "required": [
                "relativePath",
                "url",
                "titles",
                "altTitles",
                "sortOrder"
              ],
              "type": "object",
              "properties": {
                "relativePath": {
                  "type": "string",
                  "example": "subdirectory/image.jpg",
                  "minLength": 1
                },
                "url": {
                  "type": "string",
                  "example": "https://www.my-shop.org/images/product_images/original_images/subdirectory/image.jpg",
                  "minLength": 1
                },
                "titles": {
                  "type": "array",
                  "items": {
                    "required": [
                      "languageCode",
                      "text"
                    ],
                    "type": "object",
                    "properties": {
                      "languageCode": {
                        "type": "string",
                        "example": "en",
                        "minLength": 1
                      },
                      "text": {
                        "type": "string",
                        "example": "text for image",
                        "minLength": 1
                      }
                    }
                  }
                },
                "altTitles": {
                  "type": "array",
                  "items": {
                    "required": [
                      "languageCode",
                      "text"
                    ],
                    "type": "object",
                    "properties": {
                      "languageCode": {
                        "type": "string",
                        "example": "en",
                        "minLength": 1
                      },
                      "text": {
                        "type": "string",
                        "example": "text for image",
                        "minLength": 1
                      }
                    }
                  }
                },
                "sortOrder": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "minimum": 0
                }
              }
            }
          }
        }
      },
      "imageLists-imageListImages": {
        "type": "array",
        "items": {
          "required": [
            "relativePath",
            "url",
            "titles",
            "altTitles",
            "sortOrder"
          ],
          "type": "object",
          "properties": {
            "relativePath": {
              "type": "string",
              "example": "subdirectory/image.jpg",
              "minLength": 1
            },
            "url": {
              "type": "string",
              "example": "https://www.my-shop.org/images/product_images/original_images/subdirectory/image.jpg",
              "minLength": 1
            },
            "titles": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "text"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "minLength": 1
                  },
                  "text": {
                    "type": "string",
                    "example": "text for image",
                    "minLength": 1
                  }
                }
              }
            },
            "altTitles": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "text"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "minLength": 1
                  },
                  "text": {
                    "type": "string",
                    "example": "text for image",
                    "minLength": 1
                  }
                }
              }
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "imagelists-imagelists-creation": {
        "type": "array",
        "items": {
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "image lists #1",
              "minLength": 1
            }
          }
        }
      },
      "imagelists-imagelistIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1
        }
      },
      "imagelists-imagelistPaths": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "subdirectory/image.jpg",
          "minLength": 1
        }
      },
      "image-list-update": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "name"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "name": {
              "type": "string",
              "example": "image lists #1",
              "minLength": 1
            }
          }
        }
      },
      "imagelists-image-creation": {
        "required": [
          "sortOrder",
          "relativePath",
          "titles",
          "altTitles"
        ],
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "example": 1
          },
          "relativePath": {
            "type": "string",
            "example": "subdirectory/image.jpg",
            "minLength": 1
          },
          "titles": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "text"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "minLength": 1
                },
                "text": {
                  "type": "string",
                  "example": "text for image",
                  "minLength": 1
                }
              }
            }
          },
          "altTitles": {
            "type": "array",
            "items": {
              "required": [
                "languageCode",
                "text"
              ],
              "type": "object",
              "properties": {
                "languageCode": {
                  "type": "string",
                  "example": "en",
                  "minLength": 1
                },
                "text": {
                  "type": "string",
                  "example": "text for image",
                  "minLength": 1
                }
              }
            }
          }
        }
      },
      "imagelists-image-patch": {
        "type": "array",
        "items": {
          "required": [
            "relativePath",
            "sortOrder"
          ],
          "type": "object",
          "properties": {
            "relativePath": {
              "type": "string",
              "example": "subdirectory/image.jpg",
              "minLength": 1
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 0
            }
          }
        }
      },
      "image-list-update-image": {
        "type": "array",
        "items": {
          "required": [
            "relativePath",
            "titles",
            "altTitles"
          ],
          "type": "object",
          "properties": {
            "relativePath": {
              "type": "string",
              "example": "subdirectory/image.jpg",
              "minLength": 1
            },
            "sortOrder": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "example": 1
            },
            "titles": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "text"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "minLength": 1
                  },
                  "text": {
                    "type": "string",
                    "example": "text for image",
                    "minLength": 1
                  }
                }
              }
            },
            "altTitles": {
              "type": "array",
              "items": {
                "required": [
                  "languageCode",
                  "text"
                ],
                "type": "object",
                "properties": {
                  "languageCode": {
                    "type": "string",
                    "example": "en",
                    "minLength": 1
                  },
                  "text": {
                    "type": "string",
                    "example": "text for image",
                    "minLength": 1
                  }
                }
              }
            }
          }
        }
      },
      "customerMemos-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "customer": {
                "type": "string"
              },
              "memos": {
                "type": "string"
              }
            },
            "example": {
              "customer": "https://example.org/api.php/v3/...",
              "memos": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "customerMemos-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "customerMemos-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "customerMemos-customerMemos": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "content",
            "creationTime",
            "updatedAtTime"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "creatorId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "content": {
              "type": "string",
              "example": "content of the memo",
              "minLength": 1
            },
            "creationTime": {
              "type": "string",
              "example": "2022-01-13 01:23:45",
              "minLength": 1
            },
            "updatedAtTime": {
              "type": "string",
              "example": "2022-01-13 01:23:45",
              "minLength": 1
            }
          }
        }
      },
      "customerMemos-customerMemo": {
        "required": [
          "id",
          "content",
          "creationTime",
          "updatedAtTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "creatorId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "content": {
            "type": "string",
            "example": "content of the memo",
            "minLength": 1
          },
          "creationTime": {
            "type": "string",
            "example": "2022-01-13 01:23:45",
            "minLength": 1
          },
          "updatedAtTime": {
            "type": "string",
            "example": "2022-01-13 01:23:45",
            "minLength": 1
          }
        }
      },
      "customerMemos-createCustomerMemos": {
        "type": "array",
        "items": {
          "required": [
            "creatorId",
            "content"
          ],
          "type": "object",
          "properties": {
            "creatorId": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "content": {
              "type": "string",
              "example": "content of the memo",
              "minLength": 1
            }
          }
        }
      },
      "customerMemos-customerMemoIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1
        }
      },
      "customerMemos-updateCustomerMemos": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "content"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "content": {
              "type": "string",
              "example": "content of the memo",
              "minLength": 1
            }
          }
        }
      },
      "customerAddonValues-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "customerAddonValues-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "customerAddonValues-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "customer": {
                "type": "string"
              }
            },
            "example": {
              "customer": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "customerAddonValues-customerAddonValue": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "an-addon-value-key",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "example": "some customer-specific data"
          }
        }
      },
      "customerAddonValues-customerAddonValues": {
        "type": "array",
        "items": {
          "required": [
            "key",
            "value"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "an-addon-value-key",
              "minLength": 1
            },
            "value": {
              "type": "string",
              "example": "some customer-specific data"
            }
          }
        }
      },
      "customerAddonValues-create-update-customerAddonValues": {
        "type": "array",
        "items": {
          "required": [
            "key",
            "value"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "an-addon-value-key",
              "minLength": 1
            },
            "value": {
              "type": "string",
              "example": "some customer-specific data"
            }
          }
        }
      },
      "customerAddonValues-customerAddonValuesIdentifiers": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "an-addon-value-key",
          "minLength": 1,
          "description": "Contains the keys of the customer addon values"
        }
      },
      "customers-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "customers-creationMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "https://example.org/api.php/v3/..."
            },
            "example": [
              "https://example.org/api.php/v3/..."
            ]
          }
        }
      },
      "customers-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "memos": {
                "type": "string"
              },
              "addon-values": {
                "type": "string"
              }
            },
            "example": {
              "memos": "https://example.org/api.php/v3/...",
              "addon-values": "https://example.org/api.php/v3/..."
            }
          }
        }
      },
      "customers-customer": {
        "required": [
          "id",
          "customerGroup",
          "isGuestAccount",
          "isFavorite",
          "personalInformation",
          "contactInformation",
          "businessInformation",
          "credit"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "customerGroup": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "minimum": 0
          },
          "isGuestAccount": {
            "type": "boolean",
            "example": true
          },
          "isFavorite": {
            "type": "boolean",
            "example": true
          },
          "personalInformation": {
            "required": [
              "gender",
              "firstName",
              "lastName",
              "dateOfBirth",
              "customerNumber"
            ],
            "type": "object",
            "properties": {
              "gender": {
                "type": "string",
                "example": "m"
              },
              "firstName": {
                "type": "string",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "dateOfBirth": {
                "type": "string",
                "format": "date-time",
                "example": "2022-01-30 08:30:00"
              },
              "customerNumber": {
                "type": "string",
                "example": "12345-AB"
              }
            }
          },
          "contactInformation": {
            "required": [
              "email",
              "phoneNumber",
              "faxNumber"
            ],
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "j.doe@mail.com",
                "minLength": 1
              },
              "phoneNumber": {
                "type": "string",
                "example": "+49 152 012345"
              },
              "faxNumber": {
                "type": "string",
                "example": "+49 152 054321"
              }
            }
          },
          "businessInformation": {
            "required": [
              "companyName",
              "vatId",
              "isTradesperson",
              "isValidVatId"
            ],
            "type": "object",
            "properties": {
              "companyName": {
                "type": "string",
                "example": "Gambio GmbH"
              },
              "vatId": {
                "type": "string",
                "example": "DE 123456789"
              },
              "isTradesperson": {
                "type": "boolean",
                "example": true
              },
              "isValidVatId": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "credit": {
            "type": "number",
            "example": 999.99
          }
        }
      },
      "customers-customers": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "customerGroup",
            "isGuestAccount",
            "isFavorite",
            "personalInformation",
            "contactInformation",
            "businessInformation",
            "credit"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "customerGroup": {
              "type": "integer",
              "format": "int32",
              "example": 0,
              "minimum": 0
            },
            "isGuestAccount": {
              "type": "boolean",
              "example": true
            },
            "isFavorite": {
              "type": "boolean",
              "example": true
            },
            "personalInformation": {
              "required": [
                "gender",
                "firstName",
                "lastName",
                "dateOfBirth",
                "customerNumber"
              ],
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "m"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-01-30 08:30:00"
                },
                "customerNumber": {
                  "type": "string",
                  "example": "12345-AB"
                }
              }
            },
            "contactInformation": {
              "required": [
                "email",
                "phoneNumber",
                "faxNumber"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "j.doe@mail.com",
                  "minLength": 1
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+49 152 012345"
                },
                "faxNumber": {
                  "type": "string",
                  "example": "+49 152 054321"
                }
              }
            },
            "businessInformation": {
              "required": [
                "companyName",
                "vatId",
                "isTradesperson",
                "isValidVatId"
              ],
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "Gambio GmbH"
                },
                "vatId": {
                  "type": "string",
                  "example": "DE 123456789"
                },
                "isTradesperson": {
                  "type": "boolean",
                  "example": true
                },
                "isValidVatId": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "credit": {
              "type": "number",
              "example": 999.99
            }
          }
        }
      },
      "customers-customerIds": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": 1
        }
      },
      "customerMemos-createCustomer": {
        "type": "array",
        "items": {
          "required": [
            "customerGroup",
            "isGuestAccount",
            "isFavorite",
            "personalInformation",
            "contactInformation",
            "businessInformation",
            "credit"
          ],
          "type": "object",
          "properties": {
            "customerGroup": {
              "type": "integer",
              "format": "int32",
              "example": 0,
              "minimum": 0,
              "nullable": true
            },
            "isGuestAccount": {
              "type": "boolean",
              "example": true
            },
            "isFavorite": {
              "type": "boolean",
              "example": true
            },
            "personalInformation": {
              "required": [
                "gender",
                "firstName",
                "lastName",
                "dateOfBirth",
                "customerNumber"
              ],
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "m"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-01-30 08:30:00"
                },
                "customerNumber": {
                  "type": "string",
                  "example": "12345-AB"
                }
              }
            },
            "contactInformation": {
              "required": [
                "email",
                "phoneNumber",
                "faxNumber"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "j.doe@mail.com",
                  "minLength": 1
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+49 152 012345"
                },
                "faxNumber": {
                  "type": "string",
                  "example": "+49 152 054321"
                }
              }
            },
            "businessInformation": {
              "required": [
                "companyName",
                "vatId",
                "isTradesperson"
              ],
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "Gambio GmbH"
                },
                "vatId": {
                  "type": "string",
                  "example": "DE 123456789"
                },
                "isTradesperson": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "credit": {
              "type": "number",
              "example": 999.99
            }
          }
        }
      },
      "customers-updateCustomers": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "customerGroup",
            "isFavorite",
            "personalInformation",
            "contactInformation",
            "businessInformation",
            "credit"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "customerGroup": {
              "type": "integer",
              "format": "int32",
              "example": 0,
              "minimum": 0
            },
            "isFavorite": {
              "type": "boolean",
              "example": true
            },
            "personalInformation": {
              "required": [
                "gender",
                "firstName",
                "lastName",
                "dateOfBirth",
                "customerNumber"
              ],
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "m"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-01-30 08:30:00"
                },
                "customerNumber": {
                  "type": "string",
                  "example": "12345-AB"
                }
              }
            },
            "contactInformation": {
              "required": [
                "email",
                "phoneNumber",
                "faxNumber"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "j.doe@mail.com",
                  "minLength": 1
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+49 152 012345"
                },
                "faxNumber": {
                  "type": "string",
                  "example": "+49 152 054321"
                }
              }
            },
            "businessInformation": {
              "required": [
                "companyName",
                "vatId",
                "isTradesperson"
              ],
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "Gambio GmbH"
                },
                "vatId": {
                  "type": "string",
                  "example": "DE 123456789"
                },
                "isTradesperson": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "credit": {
              "type": "number",
              "example": 999.99
            }
          }
        }
      },
      "customers-patchCustomers": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "isFavorite"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "isFavorite": {
              "type": "boolean",
              "example": true
            }
          }
        }
      },
      "customer-registration": {
        "type": "array",
        "items": {
          "required": [
            "customerGroup",
            "isFavorite",
            "personalInformation",
            "contactInformation",
            "businessInformation",
            "locationInformation",
            "password",
            "credit"
          ],
          "type": "object",
          "properties": {
            "customerGroup": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1,
              "nullable": true
            },
            "isFavorite": {
              "type": "boolean",
              "example": true
            },
            "personalInformation": {
              "required": [
                "gender",
                "firstName",
                "lastName",
                "dateOfBirth",
                "customerNumber"
              ],
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "m"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-01-30 08:30:00"
                },
                "customerNumber": {
                  "type": "string",
                  "example": "12345-AB"
                }
              }
            },
            "contactInformation": {
              "required": [
                "email",
                "phoneNumber",
                "faxNumber"
              ],
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "j.doe@mail.com",
                  "minLength": 1
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+49 152 012345"
                },
                "faxNumber": {
                  "type": "string",
                  "example": "+49 152 054321"
                }
              }
            },
            "businessInformation": {
              "required": [
                "companyName",
                "vatId",
                "isTradesperson",
                "isValidVatId"
              ],
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "example": "Gambio GmbH"
                },
                "vatId": {
                  "type": "string",
                  "example": "DE 123456789"
                },
                "isTradesperson": {
                  "type": "boolean",
                  "example": true
                },
                "isValidVatId": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "locationInformation": {
              "required": [
                "streetName",
                "houseNumber",
                "postcode",
                "city",
                "country",
                "additionalInformation",
                "suburb",
                "state"
              ],
              "type": "object",
              "properties": {
                "streetName": {
                  "type": "string",
                  "example": "Parallelweg"
                },
                "houseNumber": {
                  "type": "string",
                  "example": "30"
                },
                "postcode": {
                  "type": "string",
                  "example": "28219"
                },
                "city": {
                  "type": "string",
                  "example": "Bremen"
                },
                "country": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Germany"
                    },
                    "isoCode2": {
                      "type": "string",
                      "example": "DE"
                    }
                  },
                  "required": [
                    "name",
                    "isoCode2"
                  ]
                },
                "additionalInformation": {
                  "type": "string",
                  "example": ""
                },
                "suburb": {
                  "type": "string",
                  "example": "Walle"
                },
                "state": {
                  "type": "string",
                  "example": "Bremen"
                }
              }
            },
            "password": {
              "type": "string",
              "example": "plain text password",
              "minLength": 5,
              "nullable": true
            },
            "credit": {
              "type": "number",
              "example": 999.99
            }
          }
        }
      },
      "currencies-currencies": {
        "type": "array",
        "items": {
          "required": [
            "id",
            "name",
            "code",
            "symbols",
            "value",
            "decimalSeparator",
            "thousandsSeparator",
            "decimalPlaces",
            "isDefault"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 1,
              "minimum": 1
            },
            "name": {
              "type": "string",
              "example": "Euro",
              "minLength": 1
            },
            "code": {
              "type": "string",
              "example": "EUR",
              "minLength": 1
            },
            "symbols": {
              "required": [
                "left",
                "right"
              ],
              "type": "object",
              "properties": {
                "left": {
                  "type": "string",
                  "example": ""
                },
                "right": {
                  "type": "string",
                  "example": "EUR"
                }
              }
            },
            "value": {
              "type": "number",
              "example": 1
            },
            "decimalSeparator": {
              "type": "string",
              "example": ",",
              "minLength": 1
            },
            "thousandsSeparator": {
              "type": "string",
              "example": ".",
              "minLength": 1
            },
            "decimalPlaces": {
              "type": "integer",
              "format": "int32",
              "example": 2
            },
            "isDefault": {
              "type": "boolean",
              "example": false
            }
          }
        }
      },
      "currencies-currency": {
        "required": [
          "id",
          "name",
          "code",
          "symbols",
          "value",
          "decimalSeparator",
          "thousandsSeparator",
          "decimalPlaces",
          "isDefault"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "minimum": 1
          },
          "name": {
            "type": "string",
            "example": "Euro",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "example": "EUR",
            "minLength": 1
          },
          "symbols": {
            "required": [
              "left",
              "right"
            ],
            "type": "object",
            "properties": {
              "left": {
                "type": "string",
                "example": ""
              },
              "right": {
                "type": "string",
                "example": "EUR"
              }
            }
          },
          "value": {
            "type": "number",
            "example": 1
          },
          "decimalSeparator": {
            "type": "string",
            "example": ",",
            "minLength": 1
          },
          "thousandsSeparator": {
            "type": "string",
            "example": ".",
            "minLength": 1
          },
          "decimalPlaces": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "isDefault": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "currencies-collectionMetaData": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "perPage": {
            "type": "integer",
            "minimum": 1,
            "example": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "example": 2
          },
          "links": {
            "type": "object",
            "properties": {
              "firstPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "previousPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "nextPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              },
              "lastPage": {
                "type": "string",
                "example": "https://example.org/api.php/v3/..."
              }
            }
          }
        }
      },
      "currencies-documentMetaData": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "example": {}
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Every request of the API needs to be authenticated otherwise a 401 Unauthorized response will be returned. The client will need to use the administrator user's credentials through the HTTP Basic Auth header. You can read more about the HTTP authentication header [here](https://en.wikipedia.org/wiki/Basic_access_authentication)."
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "The API also supports the usage of [JSON web tokens](https://de.wikipedia.org/wiki/JSON_Web_Token), which can be generated on the `Customers` &rarr; `Roles and Permissions` page of the Gambio Admin."
      }
    }
  }
}
